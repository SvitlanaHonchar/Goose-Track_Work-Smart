{"version":3,"file":"static/js/439.00648aa9.chunk.js","mappings":"qQAKaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,8kDAOPE,EAAAA,GAAAA,QAAAA,OAAAA,UACMA,EAAAA,GAAAA,QAAAA,KAAAA,MAKQA,EAAAA,GAAAA,QAAAA,KAAAA,MAuBjBA,EAAAA,GAAAA,QAAAA,KAAAA,KAuBKA,EAAAA,GAAAA,QAAAA,QAAAA,KACLA,EAAAA,GAAAA,QAAAA,OAAAA,UAQAA,EAAAA,GAAAA,QAAAA,KAAAA,KAcAA,EAAAA,GAAAA,QAAAA,QAAAA,M,SChFPC,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAqG7D,EAnGqB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC5B,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBF,EAAkBG,OAAOC,WAAa,IACvC,EAGD,OAFAD,OAAOE,iBAAiB,SAAUH,GAClCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,EAA3C,CACR,GAAE,IAEH,IAAMK,EAAU,CAAC,EAcjB,OAbIV,IACFU,EAAQC,aAAe,IAAIC,KAAKZ,GAChCU,EAAQG,IAC4B,IAAlCH,EAAQC,aAAaG,SACjB,EACAJ,EAAQC,aAAaG,SAAW,EACtCJ,EAAQK,cAAgB,IAAIH,KAC1B,IAAIA,KAAKF,EAAQC,cAAcK,QAC7BN,EAAQC,aAAaM,UAAYP,EAAQG,QAM7C,UAACnB,EAAD,CACEwB,UAAS,6BACE,cAATnB,EACI,gCACA,+BAJR,UAOY,cAATA,GACCD,EAAUqB,KAAI,SAACN,EAAKO,GAAN,OACZ,SAACC,EAAA,GAAD,CAAoBH,UAAU,qBAA9B,UACE,iBACEA,UAAS,iEACPE,GAAS,GAAK,kCAFlB,SAKGlB,EAAiBW,EAAI,GAAKA,KANhBA,EADH,IAWN,YAATd,GACCD,EAAUqB,KAAI,SAACN,EAAKO,GAClB,IAAME,EAAc,IAAIV,KACtB,IAAIA,KAAKF,EAAQK,eAAeC,QAC9BN,EAAQK,cAAcE,UAAYG,IAItC,OACE,SAACC,EAAA,GAAD,CAEEH,UAAS,6BACPpB,EAAUyB,QAAQV,KAASH,EAAQG,IAAM,UAAY,IAHzD,UAME,UAACW,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,IAAK,CAAEC,GAAI,MAAOC,GAAI,QAN1B,WASE,iBAAMd,UAAU,wBAAhB,SACGZ,OAAOC,YAAc,IAAMM,EAAMA,EAAI,MAExC,SAAC,KAAD,CACEoB,GAAE,wBAAmBX,EAAYY,cAA/B,YACAZ,EAAYa,WAAa,EAAI,GAA7B,WACQb,EAAYa,WAAa,GAC7Bb,EAAYa,WAAa,EAH7B,YAKAb,EAAYL,UAAY,GAAxB,WACQK,EAAYL,WAChBK,EAAYL,WAElBC,UAAU,yBAVZ,SAYGI,EAAYL,gBA7BZJ,EAkCV,MAGR,C,mMCnGYuB,EAASzC,EAAAA,GAAAA,OAAH,gwBAaGE,EAAAA,GAAAA,QAAAA,UAAAA,MACCA,EAAAA,GAAAA,QAAAA,OAAAA,YAYIA,EAAAA,GAAAA,QAAAA,QAAAA,M,SCV3B,EAfmB,SAAC,GAAyC,IAAvCwC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBACnC,OACE,+BACE,UAACF,EAAD,CACElB,UAAS,UAAKoB,EAAmB,GAAK,WAA7B,kBACTC,QAASF,EAFX,WAIE,0BACE,gBAAKG,KAAMC,EAAAA,EAAS,kBAEtB,wCAIP,ECfYC,EAAuB/C,EAAAA,GAAAA,IAAH,k/BAapBE,EAAAA,GAAAA,QAAAA,KAAAA,KAgBGA,EAAAA,GAAAA,QAAAA,KAAAA,KAOEA,EAAAA,GAAAA,QAAAA,QAAAA,MCjBlB,EAlBsB,SAAC,GAAgD,IAA9C8C,EAA6C,EAA7CA,MAAON,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAC7C,OACE,+BACE,UAACI,EAAD,CAAsBxB,UAAU,gBAAhC,WACE,uBAAIyB,KACJ,mBACEJ,QAASF,EACTnB,UAAWoB,EAAmB,GAAK,WAFrC,UAIE,0BACE,gBAAKE,KAAMC,EAAAA,EAAS,0BAM/B,E,oBCjBYG,EAAajD,EAAAA,GAAAA,GAAH,kVAGDE,EAAAA,GAAAA,QAAAA,KAAAA,MACAA,EAAAA,GAAAA,QAAAA,KAAAA,MAeTgD,EAAQlD,EAAAA,GAAAA,IAAH,uYAULE,EAAAA,GAAAA,QAAAA,KAAAA,MAWAiD,EAAUnD,EAAAA,GAAAA,IAAH,6HAOPoD,EAAUpD,EAAAA,GAAAA,IAAH,gPAWME,EAAAA,GAAAA,QAAAA,QAAAA,MAIbmD,EAAWrD,EAAAA,GAAAA,EAAH,gZAEVE,EAAAA,GAAAA,QAAAA,KAAAA,KAcaA,EAAAA,GAAAA,QAAAA,OAAAA,UAIAA,EAAAA,GAAAA,QAAAA,QAAAA,KAIAA,EAAAA,GAAAA,QAAAA,MAAAA,M,wCCrFXoD,EAAkBtD,EAAAA,GAAAA,GAAH,smBAgBdE,EAAAA,GAAAA,QAAAA,KAAAA,KAUEA,EAAAA,GAAAA,QAAAA,QAAAA,MAUHqD,GAAWvD,EAAAA,EAAAA,IAAOwD,EAAAA,EAAPxD,CAAH,mgBAuBRyD,GAAiBzD,EAAAA,EAAAA,IAAO0D,EAAAA,EAAP1D,CAAH,0aAKbE,EAAAA,GAAAA,QAAAA,KAAAA,MAkBDyD,EAAgB3D,EAAAA,GAAAA,KAAH,mMAIfE,EAAAA,GAAAA,QAAAA,KAAAA,MC9DX,EA1BiB,WAEX,IADJ0D,EACG,uDADY,CAAEC,QAAQ,EAAOC,OAAQ,GAAIC,QAAS,MAErD,GAAoCzD,EAAAA,EAAAA,UAASsD,GAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,SAACJ,GAAD,IAASC,EAAT,uDAAmB,KAAnB,OAChBE,EAAc,CAAEJ,QAAQ,EAAMC,OAAAA,EAAQC,QAAAA,GADtB,EAGZI,EAAa,kBAAMF,EAAcL,EAApB,EAEbQ,EAAc,SAACN,GAAD,IAASC,EAAT,uDAAmB,KAAnB,OAClBE,GAAc,SAAAI,GAEZ,MAAO,CAAER,QADOQ,EAAUR,OACTC,OAAAA,EAAQC,QAAAA,EAC1B,GAJiB,EAMpB,MAAO,CACLF,OAAQG,EAAWH,OACnBC,OAAQE,EAAWF,OACnBC,QAASC,EAAWD,QACpBG,UAAAA,EACAC,WAAAA,EACAC,YAAAA,EAEH,E,uCC1BYE,EAAiB,WAE5B,MAAiB,SADHC,aAAaC,QAAQ,qBAEpC,E,eCGDC,IAAAA,cAAoB,SAEpB,I,oCAgGA,GAhGoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,GAAY,YACtCd,EAA4Bc,EAA5Bd,OAAQe,EAAoBD,EAApBC,QAASd,EAAWa,EAAXb,OACzB,GAA0BxD,EAAAA,EAAAA,UAASK,OAAOC,YAA1C,eAAOiE,EAAP,KAAcC,EAAd,KACA,GAAkCxE,EAAAA,EAAAA,UAASgE,KAA3C,eAAOS,EAAP,KAAkBC,EAAlB,MAEAvE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,kBAAMoE,EAASnE,OAAOC,WAAtB,EAErB,OADAD,OAAOE,iBAAiB,SAAUH,GAC3B,kBAAMC,OAAOG,oBAAoB,SAAUJ,EAA3C,CACR,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACRuE,EAAaV,IACd,GAAE,IAEH,IAAMW,EAAoB,CACxBC,SAAU,WACVC,QAAS,OACTC,IAAK,EACLC,MAAO,EACP,UAAW,CACTC,gBAAiB,eAEnB,cAAe,CACbC,OAAQ,WAEVC,IAAK,CACHD,OAAQR,EAAY,UAAY,YAI9BU,EAAqB,CACzBC,WAAYX,EAAY,UAAY,UACpCY,OAAQZ,EACJ,sBACA,sCAGAa,EAAe,CACnBC,QAAS,CACPP,gBAAiB,sBAEnBQ,SAAQ,QACNV,IAAK,MACLW,KAAM,MACNV,MAAO,OACPW,OAAQ,OACRC,YAAa,OACbpB,MAAOA,GAAS,IAAM,QAAU,QAChCqB,SAAU,OACVC,WAAYtB,GAAS,IAAM,OAAS,OACpCuB,cAAe,OACfC,YAAaxB,GAAS,IAAM,OAAS,OACrCyB,aAAczB,GAAS,IAAM,OAAS,OAEtC0B,aAAc,MACdC,UAAW,qCACXC,UAAW,yBACRhB,IAIP,OACE,UAAC,IAAD,CACE5B,OAAQA,EACR6C,aAAY,2BAAsB5C,EAAtB,SACZ6C,eAAgB,IAChBC,2BAA2B,EAC3BC,eAAgBjC,EAChBkC,MAAO,CACLjB,QAASD,EAAaC,QACtBC,QAASF,EAAaE,SAR1B,WAWE,SAACiB,EAAA,EAAD,CACE,aAAW,cACXjF,GAAImD,EACJrC,QAAS,kBAAMgC,GAAN,EACTrD,UAAU,kBAJZ,UAME,gBAAKsD,MAAM,KAAKmC,OAAO,KAAvB,UACE,gBAAKC,UAAS,UAAKnE,EAAAA,EAAL,gBAGjB4B,IAGN,E,iEC3FKwC,GAAiB,qOAUEhH,EAAAA,GAAAA,QAAAA,QAAAA,KAVF,YAcjBiH,GAAkB,qTAiBlBC,GAAwB,cAC1BD,GAD0B,8IAORjH,EAAAA,GAAAA,QAAAA,QAAAA,KAPQ,OAUxBmH,GAAmB,oIAOdnH,EAAAA,GAAAA,QAAAA,MAAAA,KAPc,OAUZoH,GAAatH,EAAAA,GAAAA,KAAH,oUAmBVuH,GAAYvH,EAAAA,GAAAA,MAAH,6MAClBkH,GAEqBhH,EAAAA,GAAAA,QAAAA,QAAAA,MAWZsH,GAAQxH,EAAAA,GAAAA,IAAH,sBAELyH,GAAczH,EAAAA,GAAAA,IAAH,+TACpBwH,IAgBSE,GAAO1H,EAAAA,GAAAA,IAAH,4RAeJ2H,GAAQ3H,EAAAA,GAAAA,MAAH,6IAMDE,EAAAA,GAAAA,WAAAA,YAGJ0H,IAAa5H,EAAAA,EAAAA,IAAO6H,GAAAA,EAAP7H,CAAH,kDAEjBkH,IAIOY,GAAa9H,EAAAA,GAAAA,GAAH,mHAQV+H,GAAe/H,EAAAA,GAAAA,OAAH,0NACrBmH,GAGOjH,EAAAA,GAAAA,QAAAA,KAAAA,KACWA,EAAAA,GAAAA,QAAAA,KAAAA,MAOT8H,GAAYhI,EAAAA,GAAAA,OAAH,gQAClBoH,IAcSa,GAAajI,EAAAA,GAAAA,OAAH,oRACnBoH,GASQlH,EAAAA,GAAAA,QAAAA,QAAAA,MAMCgI,GAAclI,EAAAA,GAAAA,EAAH,iCACpBqH,IAESc,GAAenI,EAAAA,GAAAA,EAAH,iCACrBqH,I,iCCtIJ,GAjDmC,SAAC,GAAgC,IAA9Be,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClD,GAAkChI,EAAAA,EAAAA,UAASgE,KAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KAEMuD,EACJC,GAAAA,EAAAA,WAAAA,wBAAAA,aAAAA,WAEIC,EAAmB,CACvB9C,OAAQZ,EAAS,oBACA7E,EAAAA,GAAAA,QAAAA,OAAAA,eADA,OAGjBoF,gBAAiBP,EAAS,wBAAsB7E,EAAAA,GAAAA,QAAAA,KAAAA,OAEhDqG,aAAc,MACd,2BAA4B,CAC1BmC,MAAgB,UAAT3D,EACA7E,EAAAA,GAAAA,QAAAA,OAAAA,UACAA,EAAAA,GAAAA,QAAAA,KAAAA,MACP,aAAc,CACZyF,OAAQ,OACRY,aAAc,OAEhB,mBAAoB,CAClBoC,YAAa,iBASnB,OAJAlI,EAAAA,EAAAA,YAAU,WACRuE,EAAaV,IACd,GAAE,KAGD,SAACsE,GAAA,EAAD,CAAsBC,YAAaC,GAAAA,EAAcP,WAAYA,EAA7D,UACE,SAACX,GAAD,CACEmB,OAAO,QACPjH,GAAI2G,EACJO,KAAMZ,EACNC,MAAOA,EACPC,SAAUA,KAIjB,E,sDChDD,GAHyB,SAAAW,GACvB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,EAChD,ECFYC,GAAiB,CAC5BC,IAAK,MACLC,OAAQ,SACRC,KAAM,QCGKC,GAAe,CAC1B,CACEC,WAAY,QACZ1G,MAAO,SAET,CACE0G,WAAY,cACZ1G,MAAO,eAET,CACE0G,WAAY,OACZ1G,MAAO,SCHL2G,GAAc,CAClBC,IAAK,CACHlB,MAAOxI,EAAAA,GAAAA,QAAAA,OAAAA,UACP2J,UAAW,4BAEbC,OAAQ,CACNpB,MAAOxI,EAAAA,GAAAA,QAAAA,QAAAA,KACP2J,UAAW,2BAEbE,KAAM,CACJrB,MAAOxI,EAAAA,GAAAA,QAAAA,MAAAA,KACP2J,UAAW,4BAITG,GAAY,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OAChB,iBACE7B,MAAO,CACLjC,MAAO,OACPmC,OAAQ,OACRT,aAAc,MACdxE,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChByD,OAAO,eAAD,OAAiBgD,IAR3B,UAWE,iBACE7B,MAAO,CACLjC,MAAO,OACPmC,OAAQ,OACRT,aAAc,MACdjB,gBAAiBoD,MAjBP,EAuBLuB,GAAe,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC3C,GAAgC7J,EAAAA,EAAAA,UAAS4J,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAAkC/J,EAAAA,EAAAA,UAASgE,KAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KAMA,OAJAvE,EAAAA,EAAAA,YAAU,WACRuE,EAAaV,IACd,GAAE,KAGD,UAACgG,GAAA,EAAD,CAAaC,UAAU,WAAvB,WACE,SAACC,GAAA,EAAD,CAAWD,UAAU,SAAShJ,UAAU,UAAxC,uBAGA,SAACkJ,GAAA,EAAD,CACEC,KAAG,EACHrC,MAAO+B,EACP9B,SAAU,SAAAqC,GACRN,EAAYM,EAAMC,OAAOvC,OACzB8B,EAAaQ,EAAMC,OAAOvC,MAC3B,EACDvG,GAAI,CAAE+I,UAAW,QAPnB,SASG,CAACxB,GAAeC,IAAKD,GAAeE,OAAQF,GAAeG,MAAMhI,KAChE,SAAC6G,EAAO5G,GAAR,OACE,SAACqJ,GAAA,EAAD,CAEEzC,MAAOA,EACP0C,SACE,SAACC,GAAA,EAAD,CACE3C,MAAOA,EACP4C,MACE,SAACjB,GAAD,CACEtB,MAAOiB,GAAYtB,GAAOK,MAC1BC,YAAa5D,EAAY,cAAgB,YAG7CmG,aACE,SAAClB,GAAD,CACEtB,MAAOiB,GAAYtB,GAAOK,MAC1BC,YAAagB,GAAYtB,GAAOwB,YAGpC/H,GAAI,CACFqD,QAAS,MACTc,YAAa,SAInBmC,MAAO+C,GAAiB9C,GACxBvG,GAAI,CACFsJ,WAAY,MACZnF,YAAa,MACb,wBAAyB,CACvBoF,WAAY,IACZC,SAAU,OACVC,WAAY,OACZ7C,MAAO3D,EAAY,UAAY,aA/B9BtD,EAFT,QA0CT,E,sBClHD+J,KAAAA,OAAaC,MAEb,I,eAQA,GAR8B,SAACC,EAAYC,GACzC,MAAmBA,EAAWC,MAAM,KAA7BC,GAAP,eAIA,OAHmBL,KAAAA,IAAA,UACdK,EADc,YACFH,EAAWI,QAAQ,IAAK,KADtB,aAGD/C,OAAO,mBAC1B,E,sBCwCD,GAlD6BgD,GAAAA,KAAaC,MAAM,CAC9ChJ,MAAO+I,GAAAA,KACJE,IACC,IACA,oEAEDC,SAAS,mCACZC,MAAOJ,GAAAA,KAEJK,QAAQ,qCAAsC,CAC7CC,QACE,wFAEHH,SAAS,0BACZI,IAAKP,GAAAA,KACFK,QAAQ,qCAAsC,CAC7CC,QACE,sFAEHE,KACC,qBACA,iDACA,SAAUlE,GACR,IAAQ8D,EAAUK,KAAKC,OAAfN,MACR,IAAKA,EACH,OAAO,EAET,IAAMO,EAAYC,SAASR,EAAML,QAAQ,IAAK,IAAK,IAEnD,OADgBa,SAAStE,EAAMyD,QAAQ,IAAK,IAAK,IAChCY,CAClB,IAEFR,SAAS,yBACZ9B,SAAU2B,GAAAA,KACPa,MACC,CAAC,MAAO,SAAU,QAClB,uDAEDV,SAAS,wBACZW,KAAMd,GAAAA,KACHe,UAAU,uDACVZ,SAAS,qBACZa,SAAUhB,GAAAA,KACPa,MACC,CAAC,QAAS,cAAe,QACzB,8DAEDV,SAAS,2BC9CDc,GAAY,qCAAG,WAAMC,GAAN,iGAElBC,GAAAA,SAA8BD,EAAM,CAAEE,YAAY,IAFhC,8DAIlBC,GAAmB,OAAI,KAAMC,QAAQC,KAAK,MAChDC,EAAAA,GAAAA,IAAoBH,GALI,mBAMjB,GANiB,kCASnB,GATmB,yDAAH,sD,WC6NzB,GA9LiB,SAAAzI,GACf,OAAkCrE,EAAAA,EAAAA,UAASgE,KAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACQlB,EAAiDa,EAAjDb,OAAQc,EAAyCD,EAAzCC,QAASmI,EAAgCpI,EAAhCoI,SAAUF,EAAsBlI,EAAtBkI,KAAMW,EAAgB7I,EAAhB6I,YACzC,GAA0BlN,EAAAA,EAAAA,UAASkN,EAAYxK,OAAS,IAAxD,eAAOA,EAAP,KAAcyK,EAAd,KACA,GAAgCnN,EAAAA,EAAAA,UAC9BkN,EAAYpD,UAAYf,GAAeC,KADzC,eAAOc,EAAP,KAAiBC,EAAjB,MAGA5J,EAAAA,EAAAA,YAAU,WACRuE,EAAaV,IACd,GAAE,IAEH,IAAMoJ,GAAWC,EAAAA,EAAAA,MAYjB,GAA0BrN,EAAAA,EAAAA,UAXE,SAACkN,EAAaX,GACxC,OAAOW,EAAYrB,MACfX,KAAMoC,GAAsBJ,EAAYrB,MAAOU,IAC/CrB,MACL,CAOkCqC,CAAoBL,EAAaX,IAApE,eAAOV,EAAP,KAAc2B,EAAd,KACA,GAAsBxN,EAAAA,EAAAA,UANI,SAACkN,EAAaX,GACtC,OAAOW,EAAYlB,IACfd,KAAMoC,GAAsBJ,EAAYlB,IAAKO,IAC7CrB,OAAQuC,KAAK,IAAIC,OAAO,GAC7B,CAE8BC,CAAkBT,EAAaX,IAA9D,eAAOP,EAAP,KAAY4B,EAAZ,KAEMC,EAAmB,SAAC,GAOnB,IANLnL,EAMI,EANJA,MACAmJ,EAKI,EALJA,MACAG,EAII,EAJJA,IACAlC,EAGI,EAHJA,SACA2C,EAEI,EAFJA,SACAF,EACI,EADJA,KAKA,MAAO,CACL7J,MAAOA,EACPmJ,MALgBA,EAAMpD,OAAO,SAM7BuD,IALcA,EAAIvD,OAAO,SAMzBqB,SAAUA,EACV2C,SAAUA,EACVF,KAAMA,EAET,EAEKuB,EAAY,qCAAG,WAAMC,GAAN,6EACnBA,EAAEC,iBACIC,EAAevL,EAAMwL,OACf,OAARlC,GAA0B,OAAVH,EAHD,0CAIVsC,EAAAA,GAAAA,IACL,2DALe,UAQL,OAAVtC,EARe,0CASVsC,EAAAA,GAAAA,IAAa,+CATH,UAWP,OAARnC,EAXe,0CAYVmC,EAAAA,GAAAA,IAAa,6CAZH,UAeS,IAAxBF,EAAaG,OAfE,2CAgBVC,EAAAA,GAAAA,OAhBU,eAkBb1B,EAAOkB,EAAiB,CAC5BnL,MAAOuL,EACPpC,MAAAA,EACAG,IAAAA,EACAlC,SAAAA,EACA2C,SAAAA,EACAF,KAAAA,IAxBiB,UA2BGG,GAAaC,GA3BhB,uCA8BJ,QAAXnJ,EA9Be,kCA+BL4J,GAASkB,EAAAA,GAAAA,IAAW3B,IA/Bf,6DAgCLS,GACJmB,EAAAA,GAAAA,IAAW,CAAEC,OAAQtB,EAAYuB,GAAIC,SAAU/B,KAjCtC,qCAoCNgC,MApCM,2CAqCRC,EAAAA,GAAAA,OArCQ,QAwCjBtK,IAxCiB,4CAAH,sDA2CZuK,GAAgBC,EAAAA,EAAAA,UAAQ,yBAAM9C,QAAN,IAAMA,OAAN,EAAMA,EAAK+C,SAASlD,EAApB,GAA4B,CAACG,EAAKH,IAE1DmD,EAAc,CAClB5G,MAAgB,UAAT3D,EACA7E,EAAAA,GAAAA,QAAAA,OAAAA,UACAA,EAAAA,GAAAA,QAAAA,KAAAA,OAGHqP,EAAc,CAClB7G,MAAgB,UAAT3D,EACA7E,EAAAA,GAAAA,QAAAA,OAAAA,UACAA,EAAAA,GAAAA,QAAAA,KAAAA,MACPoF,gBAAiBP,EAAS,wBAAsB7E,EAAAA,GAAAA,QAAAA,KAAAA,OAChDyF,OAAQZ,EAAS,oBACA7E,EAAAA,GAAAA,QAAAA,OAAAA,eADA,QAKnB,OACE,UAACoH,GAAD,CACEkI,SAAUpB,EACVtH,MAAO,CAAE2I,WAAYvP,EAAAA,GAAAA,WAAAA,YAFvB,WAIE,UAACuH,GAAD,YACE,UAACD,GAAD,YACE,UAACE,GAAD,YACE,UAACC,GAAD,CAAO+H,QAAQ,QAAQ5I,OAAK,UAAOwI,GAAnC,UACG,IADH,YAIA,SAAC/H,GAAD,CACEoI,KAAK,OACL3G,KAAK,QACL4G,YAAY,aACZvH,MAAOrF,EACPsF,SAAU,SAAAqC,GAAK,OAAI8C,EAAS9C,EAAMC,OAAOvC,MAA1B,EACfvB,OAAK,UAAOyI,KAEbvM,EAAM0L,OAAS,MACd,SAACvG,GAAD,mDAGJ,UAACT,GAAD,YACE,SAACC,GAAD,CAAO+H,QAAQ,QAAQ5I,OAAK,UAAOwI,GAAnC,oBAGA,SAAC,GAAD,CACElH,MAAM,QACNC,MAAO8D,EACP7D,SAAU,SAAAuH,GAAQ,OAAI/B,EAAS+B,EAAb,QAItB,UAACnI,GAAD,YACE,SAACC,GAAD,CAAO+H,QAAQ,MAAM5I,OAAK,UAAOwI,GAAjC,kBAGA,SAAC,GAAD,CACElH,MAAM,MACNC,MAAOiE,EACPhE,SAAU,SAAAuH,GAAQ,OAAI3B,EAAO2B,EAAX,OAIrBV,IACC,SAACjH,GAAD,iEAKJ,SAAC+B,GAAD,CAAcC,aAAcE,EAAUD,aAAcE,OAE1C,QAAXvG,GACC,UAACgE,GAAD,YACE,yBACE,UAACE,GAAD,CAAW2H,KAAK,SAAhB,WACE,0BACE,gBAAK1I,UAAS,UAAKnE,EAAAA,EAAL,kBAFlB,YAOF,yBACE,SAACiF,GAAD,CAAc4H,KAAK,SAAS/M,QAASgC,EAArC,0BAMJ,UAACqD,GAAD,CAAY0H,KAAK,SAAjB,WACE,0BACE,gBAAK1I,UAAS,UAAKnE,EAAAA,EAAL,eAFlB,YASP,ECzMD,GAfkB,SAAA6B,GAChB,IAAQb,EAAyDa,EAAzDb,OAAQc,EAAiDD,EAAjDC,QAASf,EAAwCc,EAAxCd,OAAQkJ,EAAgCpI,EAAhCoI,SAAUF,EAAsBlI,EAAtBkI,KAAMW,EAAgB7I,EAAhB6I,YACjD,OACE,SAAC,GAAD,CAAa1J,OAAQA,EAAQc,QAASA,EAASf,OAAQA,EAAvD,UACE,SAAC,GAAD,CACEC,OAAQA,EACRc,QAASA,EACTmI,SAAUA,EACVF,KAAMA,EACNW,YAAaA,KAIpB,E,WCiJD,GA9IoB,SAAC,GAAqB,IAAhBwB,EAAe,oBACjCtB,GAAWC,EAAAA,EAAAA,MAETvD,EAAyD4E,EAAzD5E,SAAU2C,EAA+CiC,EAA/CjC,SAAUF,EAAqCmC,EAArCnC,KAAM7J,EAA+BgM,EAA/BhM,MAAOmJ,EAAwB6C,EAAxB7C,MAAOG,EAAiB0C,EAAjB1C,IAAUyC,EAAOC,EAAZc,IACrD,EAA6DC,IAArDlM,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQK,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,YAAaL,EAAjD,EAAiDA,QAEjD,GAAgCzD,EAAAA,EAAAA,UAAS,MAAzC,eAAO0P,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAQfI,EAAoB,CACxBrB,GAAAA,EACA/L,MAAAA,EACAmJ,MAAAA,EACAG,IAAAA,EACAlC,SAAAA,GAGIiG,EAAsB5G,GAAa6G,QACvC,SAAAC,GAAI,OAAIA,EAAK7G,aAAeqD,CAAxB,IAmBAyD,EAAWtQ,EAAAA,GAAAA,YAAAA,OAAAA,GAEjB,OACE,iCACE,UAACoD,EAAD,YACE,2BACE,SAAC,KAAD,CACEyL,GAAG,eACH,gBAAemB,EAAO,kBAAeO,EACrC,gBAAc,OACd,gBAAeP,EAAO,YAASO,EAC/B7N,QA9CU,SAAA+H,GAClBsF,EAAYtF,EAAM+F,cACnB,EA6CS5O,GAAI,CAAE6O,SAAU,IANlB,UAQE,0BACE,gBAAK9N,KAAMC,EAAAA,EAAS,wBAGxB,SAACS,EAAD,CACEwL,GAAG,aACHiB,SAAUA,EACVE,KAAMA,EACNtL,QAtDU,WAClBqL,EAAY,KACb,EAqDSW,cAAe,CACb,kBAAmB,gBAErBC,gBACEL,EACI,CAAEM,WAAY,QAASC,SAAU,OACjC,CAAED,WAAY,OAAQC,SAAU,OAEtCC,aACER,EACI,CAAEM,WAAY,QAASC,SAAU,UACjC,CAAED,WAAY,OAAQC,SAAU,UAhBxC,SAmBGV,EAAoB7O,KAAI,SAAAuL,GAAQ,OAC/B,UAACtJ,EAAD,CACEqD,MAAO,CACL/E,QAAS,OACTG,eAAgB,gBAChBD,WAAY,SACZE,IAAK,MACLgD,QAAS,MAGXvC,QAAS,YA/DA,SAAAqO,GACrB,IAAMC,GAAY,kBACblC,GADa,IAEhBjC,SAAUkE,IAEZvD,GAASmB,EAAAA,GAAAA,IAAW,CAAEC,OAAQC,EAAIC,SAAUkC,IAC7C,CA0DeC,CAAepE,EAASrD,WACzB,EAXH,WAaE,SAAC/F,EAAD,UAAgBoJ,EAAS/J,SACzB,0BACE,gBAAKH,KAAMC,EAAAA,EAAS,uBAPjBiK,EAASrD,WATe,UAsBrC,yBACE,mBACEiG,KAAK,SACL/M,QAAS,WArEjBwB,EAAY,OAAQ,CAAEL,QAASqM,GAuEtB,EAJH,UAME,0BACE,gBAAKvN,KAAMC,EAAAA,EAAS,mBAI1B,yBACE,mBACE6M,KAAK,SACL/M,QAAS,WA9EM,IAAAkM,IA+EIC,EA9E3BrB,GAAS0D,EAAAA,GAAAA,IAAWtC,GA+EX,EAJH,UAME,0BACE,gBAAKjM,KAAMC,EAAAA,EAAS,oBAM3Be,IACC,SAAC,GAAD,CACEC,OAAQA,EACRc,QAAST,EACTN,OAAQA,EACRkJ,SAAUA,EACVF,KAAMA,EACNW,YAAazJ,EAAUA,EAAQA,QAAU,CAAC,MAKnD,ECvHD,GA7BuB,SAAC,GAAiB,IAAZkJ,EAAW,oBAC9B7C,EAAoB6C,EAApB7C,SAAUpH,EAAUiK,EAAVjK,MAEVqO,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAA3BF,WAER,OACE,UAACpO,EAAD,CAA2B1B,UAAU,iBAArC,WACE,SAAC2B,EAAD,WACE,uBAAIF,OAEN,UAACG,EAAD,YACE,UAACC,EAAD,YACE,gBAAKoO,IAAKH,EAAYI,IAAI,YAC1B,SAACpO,EAAD,CACE9B,WAAWmQ,EAAAA,EAAAA,GAAK,CACd9H,IAAkB,QAAbQ,EACLN,OAAqB,WAAbM,EACRL,KAAmB,SAAbK,IAJV,SAOGA,QAGL,SAAC,IAAD,UAAiB6C,SAjBJA,EAAK6C,IAqBzB,ECtCY6B,GAAe3R,EAAAA,GAAAA,GAAH,4MCkBzB,GAhByB,SAAC,GAAe,IAAb4R,EAAY,EAAZA,MACpBC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOtB,QAAO,SAAArD,GAAI,MAAsB,QAAlBA,EAAK7C,QAAT,IAC7B0H,EAAW,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOtB,QAAO,SAAArD,GAAI,MAAsB,WAAlBA,EAAK7C,QAAT,IAChC2H,EAAS,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAOtB,QAAO,SAAArD,GAAI,MAAsB,SAAlBA,EAAK7C,QAAT,IAE9B4H,EAAa,kBAAOH,IAAP,OAAoBC,IAApB,OAAoCC,IAEvD,OACE,SAACJ,GAAD,UACGK,EAAcxQ,KAAI,SAAAyL,GAAI,OACrB,SAAC,IAAD,UAAmCA,GAAdA,EAAK6C,IADL,KAK5B,E,sBCdYmC,GAAgBjS,EAAAA,GAAAA,IAAH,+dAMJE,EAAAA,GAAAA,QAAAA,KAAAA,MAEAA,EAAAA,GAAAA,QAAAA,OAAAA,WAkBTgS,IAAWlS,EAAAA,EAAAA,IAAOmS,GAAAA,GAAPnS,CAAH,2rBAmBHE,EAAAA,GAAAA,QAAAA,OAAAA,iBAIAA,EAAAA,GAAAA,QAAAA,OAAAA,eAMAA,EAAAA,GAAAA,QAAAA,OAAAA,WAYLkS,IAAYpS,EAAAA,EAAAA,IAAOqS,GAAAA,EAAPrS,CAAH,4MCUtB,GAxEoB,SAAC,GAA4C,IAA1CgD,EAAyC,EAAzCA,MAAO4O,EAAkC,EAAlCA,MAAO7E,EAA2B,EAA3BA,SAAU1M,EAAiB,EAAjBA,WAC7C,EAA6D0P,IAArDlM,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQK,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,YAAaL,EAAjD,EAAiDA,QAE3CuO,EAAqB,WACzBlO,EAAY,MAAO,CAAEL,QAAS,CAAC,GAChC,EAEKpB,EAAmB,WAMvB,QALuB,IAAI1B,KAAKZ,GAAYkS,cAAcnJ,MAAM,EAAG,KACrD,IAAInI,MAAOsR,cAAcnJ,MAAM,EAAG,IASjD,EAED,OACE,UAAC6I,GAAD,CAAe1Q,UAAU,gBAAzB,WACE,SAAC,EAAD,CACEyB,MAAOA,EACPN,cAAe4P,EACf3P,iBAAkBA,OAEpB,SAACuP,GAAD,CACE3B,MAAI,EACJhP,UAAU,qBACViR,aAAc,CAAEnQ,GAAI,GACpBP,GAAI,CACFqD,QAAS,IACTsN,OAAQ,IACRC,UAAW,OACX1Q,cAAe,SACfsD,gBAAiBpF,EAAAA,GAAAA,QAAAA,QAAAA,MATrB,UAYE,SAACkS,GAAD,CACEtQ,GAAI,CACFC,QAAS,OACTC,cAAe,SACfE,eAAgB,SAChBD,WAAY,SACZuE,UAAW,OACX,kBAAmB,CACjBlB,gBAAiB,gBARvB,SAYGsM,IAAS,SAAC,GAAD,CAAkBA,MAAOA,SAGvC,SAAC,EAAD,CACElP,cAAe4P,EACf3P,iBAAkBA,MAEnBkB,IACC,SAAC,GAAD,CACEC,OAAQA,EACRc,QAAST,EACTN,OAAQA,EACRkJ,SAAUA,EACVF,KAAMxM,EACNmN,YAAazJ,EAAUA,EAAQA,QAAU,CAAC,MAKnD,EC3EY4O,IAAgB3S,EAAAA,EAAAA,IAAOmS,GAAAA,GAAPnS,CAAH,2+BAmBRE,EAAAA,GAAAA,QAAAA,OAAAA,iBAIAA,EAAAA,GAAAA,QAAAA,OAAAA,eAKAA,EAAAA,GAAAA,QAAAA,KAAAA,OC6BlB,GAxDyB,SAAC,GAA2B,IAAzB0R,EAAwB,EAAxBA,MAAOvR,EAAiB,EAAjBA,WAC3BuS,EAAU,GAEVC,EAAYC,OAAOC,KAAKnB,GAAOpQ,KAAI,SAAAwR,GACvC,OAAO,UAAGA,EAAUpB,EAAMoB,GAC3B,IAGU,OAATH,QAAS,IAATA,GAAAA,EAAWrR,KAAI,SAAAoQ,GACb,OAAOkB,OAAOG,OAAOrB,GAAOpQ,KAAI,SAAA0R,GAC9B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQC,SAAQ,SAAAC,GACrBR,EAAQS,KAAKD,EACd,GACF,GACF,IAIH,IACME,EADa,CAAC,QAAS,cAAe,QACTC,QAAO,SAACC,EAAKzG,GAE9C,OADAyG,EAAIzG,GAAJ,OAAgB6F,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAStC,QAAO,SAAArD,GAAI,OAAIA,EAAKF,WAAaA,CAAtB,IAC7ByG,CACR,GAAE,CAAC,GAEJ,OACE,SAACb,GAAD,CACEc,WAAS,EACTzR,cAAc,MACd0R,SAAS,SACTC,QAAS,EACTpS,UAAU,qBACViR,aAAc,CAAEnQ,GAAI,GACpBP,GAAI,CACF4Q,UAAW,SACXkB,UAAW,OACX,sBAAuB,CACrBzO,QAAS,EACTsN,OAAQ,EACRrH,WAAY,EACZnF,YAAa,IAdnB,SAkBGwD,GAAajI,KAAI,SAAAqS,GAAM,OACtB,SAAC,GAAD,CACE9G,SAAU8G,EAAOnK,WAEjB1G,MAAO6Q,EAAO7Q,MACd4O,MAAO0B,EAAgBO,EAAOnK,YAC9BrJ,WAAYA,GAHPwT,EAAOnK,WAHQ,KAW7B,E,WCpDYoK,GAAY,WACvB,IAAQzT,GAAe0T,EAAAA,GAAAA,MAAf1T,WACF2T,GAAW1C,EAAAA,EAAAA,IAAY2C,EAAAA,IAC7B,GAA8C3T,EAAAA,EAAAA,UAAS,CACrD4T,UAAW,GACXC,gBAAiB,GACjBC,UAAW,KAHb,eAAOC,EAAP,KAAwBC,EAAxB,KA0BA,OApBA7T,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,GAAKuT,EAAL,CACA,IAAMO,EAAY,UAAGP,EAASQ,MAAK,SAAAvH,GAAI,OAAIA,EAAKJ,OAASxM,CAAlB,WAArB,aAAG,EAAiDuR,MACtE,GAAK2C,EAAL,CAQA,IAAML,EAAYK,EAAajE,QAAO,SAAArD,GAAI,MAAsB,UAAlBA,EAAKF,QAAT,IACpCoH,EAAkBI,EAAajE,QACnC,SAAArD,GAAI,MAAsB,gBAAlBA,EAAKF,QAAT,IAEAqH,EAAYG,EAAajE,QAAO,SAAArD,GAAI,MAAsB,SAAlBA,EAAKF,QAAT,IAE1CuH,EAAmB,CAAEJ,UAAAA,EAAWC,gBAAAA,EAAiBC,UAAAA,GAPhD,MANCE,EAAmB,CACjBJ,UAAW,GACXC,gBAAiB,GACjBC,UAAW,IANM,CAiBtB,GAAE,CAACJ,EAAU3T,KAGZ,iCACE,SAACoU,EAAA,EAAD,CAAcrU,KAAK,UAAUC,WAAYA,KACzC,SAAC,GAAD,CAAkBuR,MAAOyC,EAAiBhU,WAAYA,MAG3D,C,6RCxCYqU,EAAmB,WAC9BC,EAAAA,GAAAA,QAAc,kCACf,EACYzF,EAAY,WACvByF,EAAAA,GAAAA,MAAY,sDACb,EAUYpH,EAAsB,SAAAlB,GACjCsI,EAAAA,GAAAA,MAAYtI,EACb,EAEYuI,EAAiB,WAC5BD,EAAAA,GAAAA,QACE,yEAEH,EAEYE,EAAmB,WAC9BF,EAAAA,GAAAA,MACE,0EAEH,EACYG,EAAwB,WACnCH,EAAAA,GAAAA,MACE,6GAEH,EAcYI,EAAwB,WACnCJ,EAAAA,GAAAA,QAAc,8CACf,EAEYK,EAAsB,WACjCL,EAAAA,GAAAA,MACE,oEAEH,EAEYlG,EAAe,SAAAwG,GAC1BN,EAAAA,GAAAA,MAAYM,EACb,EACYtG,EAAiB,WAC5BgG,EAAAA,GAAAA,MAAY,mDACb,C","sources":["modules/CalendarComponent/components/CalendarHead/CalendarHead.styled.jsx","modules/CalendarComponent/components/CalendarHead/CalendarHead.jsx","modules/ChosenDay/components/AddTaskBtn/AddTaskBtn.styled.jsx","modules/ChosenDay/components/AddTaskBtn/AddTaskBtn.jsx","modules/ChosenDay/components/ColumnHeadBar/ColumnHeaderBar.jsx","modules/ChosenDay/components/ColumnHeadBar/ColumnHeadBar.jsx","modules/ChosenDay/components/TaskColumnCard/TaskColumnCard.styled.jsx","modules/ChosenDay/components/TaskToolbar/TaskToolbar.styled.jsx","shared/hooks/useModal.js","shared/utils/checkDarkTheme.js","shared/components/CustomModal/CustomModal.jsx","shared/components/TaskForm/TaskForm.styled.jsx","shared/components/TaskForm/TimePickerWithLocalization/TimePickerWithLocalization.jsx","shared/utils/capitalizeString.js","shared/constants/tasksPriority.js","shared/constants/tasksCategory.js","shared/components/TaskForm/PriorityList/PriorityList.jsx","shared/utils/getTimeStringWithDate.js","shared/components/TaskForm/taskValidationSchema.js","shared/components/TaskForm/validateForm.js","shared/components/TaskForm/TaskForm.jsx","shared/components/TaskModal/TaskModal.jsx","modules/ChosenDay/components/TaskToolbar/TaskToolbar.jsx","modules/ChosenDay/components/TaskColumnCard/TaskColumnCard.jsx","modules/ChosenDay/components/ColumnsTasksList/ColumnsTasksList.styled.jsx","modules/ChosenDay/components/ColumnsTasksList/ColumnsTasksList.jsx","modules/ChosenDay/components/TasksColumn/TasksColumn.styled.jsx","modules/ChosenDay/components/TasksColumn/TasksColumn.jsx","modules/ChosenDay/components/TasksColumnsList/TasksColumnsList.styled.jsx","modules/ChosenDay/components/TasksColumnsList/TasksColumnsList.jsx","modules/ChosenDay/components/ChosenDay/ChosenDay.jsx","shared/utils/notifications.js"],"sourcesContent":["import { List } from '@mui/material';\nimport styled from 'styled-components';\n\nimport theme from 'shared/theme';\n\nexport const ListStyled = styled(List)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 14px;\n\n  background: ${theme.palette.custom.mainWhite};\n  border: 1px solid ${theme.palette.grey.light};\n  border-radius: 8px;\n  text-transform: uppercase;\n\n  & li:not(:last-child) {\n    border-right: 1px solid ${theme.palette.grey.light};\n  }\n\n  @media screen and (min-width: 768px) {\n    &.calendarHead__list--dayMode {\n      margin-bottom: 16px;\n    }\n\n    &.calendarHead__list--monthMode {\n      margin-bottom: 18px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &.calendarHead__list--monthMode {\n      margin-bottom: 15px;\n    }\n  }\n\n  & .calendarHead__dateLink {\n    padding: 4px 6px;\n\n    border-radius: 6px;\n    color: ${theme.palette.grey[500]};\n\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.166;\n\n    @media screen and (min-width: 768px) {\n      padding: 4px 8px;\n\n      border-radius: 8px;\n      font-size: 16px;\n      line-height: 1.125;\n    }\n  }\n\n  .calendarHead__item {\n    justify-content: center;\n    min-width: 12px;\n    padding-right: 0;\n    padding-left: 0;\n  }\n\n  .calendarHead__item.current .calendarHead__dateLink {\n    background: ${theme.palette.primary.main};\n    color: ${theme.palette.custom.mainWhite};\n  }\n\n  .calendarHead__weekDay {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.125;\n\n    color: ${theme.palette.grey[600]};\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.286;\n\n      &.calendarHead__weekDay--monthMode {\n        font-size: 16px;\n        line-height: 1.125;\n      }\n    }\n  }\n\n  &.calendarHead__list--monthMode .calendarHead__weekDay--holiday {\n    color: ${theme.palette.primary.main};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport { ListStyled } from './CalendarHead.styled';\n\nconst WEEK_DAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\nconst CalendarHead = ({ mode, currentDay }) => {\n  const [isNarrowScreen, setIsNarrowScreen] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsNarrowScreen(window.innerWidth < 768);\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const options = {};\n  if (currentDay) {\n    options.selectedDate = new Date(currentDay);\n    options.day =\n      options.selectedDate.getDay() === 0\n        ? 6\n        : options.selectedDate.getDay() - 1;\n    options.startWeekDate = new Date(\n      new Date(options.selectedDate).setDate(\n        options.selectedDate.getDate() - options.day\n      )\n    );\n  }\n\n  return (\n    <ListStyled\n      className={`calendarHead__list ${\n        mode === 'monthMode'\n          ? 'calendarHead__list--monthMode'\n          : 'calendarHead__list--dayMode'\n      }`}\n    >\n      {mode === 'monthMode' &&\n        WEEK_DAYS.map((day, index) => (\n          <ListItem key={day} className=\"calendarHead__item\">\n            <span\n              className={`calendarHead__weekDay calendarHead__weekDay--monthMode ${\n                index >= 5 && 'calendarHead__weekDay--holiday'\n              }`}\n            >\n              {isNarrowScreen ? day[0] : day}\n            </span>\n          </ListItem>\n        ))}\n      {mode === 'dayMode' &&\n        WEEK_DAYS.map((day, index) => {\n          const currentDate = new Date(\n            new Date(options.startWeekDate).setDate(\n              options.startWeekDate.getDate() + index\n            )\n          );\n\n          return (\n            <ListItem\n              key={day}\n              className={`calendarHead__item ${\n                WEEK_DAYS.indexOf(day) === options.day ? 'current' : ''\n              }`}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: { xs: '6px', md: '4px' },\n                }}\n              >\n                <span className=\"calendarHead__weekDay\">\n                  {window.innerWidth >= 765 ? day : day[0]}\n                </span>\n                <Link\n                  to={`/calendar/day/${currentDate.getFullYear()}-${\n                    currentDate.getMonth() + 1 < 10\n                      ? `0${currentDate.getMonth() + 1}`\n                      : currentDate.getMonth() + 1\n                  }-${\n                    currentDate.getDate() < 10\n                      ? `0${currentDate.getDate()}`\n                      : currentDate.getDate()\n                  }`}\n                  className=\"calendarHead__dateLink\"\n                >\n                  {currentDate.getDate()}\n                </Link>\n              </Box>\n            </ListItem>\n          );\n        })}\n    </ListStyled>\n  );\n};\nCalendarHead.propTypes = {\n  mode: PropTypes.string.isRequired,\n  currentDay: PropTypes.string,\n};\n\nexport default CalendarHead;\n","import styled from 'styled-components';\nimport theme from '../../../../shared/theme';\n\nexport const Button = styled.button`\n  width: 299px;\n  width: 100%;\n  width: 100%;\n  height: 48px;\n  display: flex;\n  box-sizing: border-box;\n\n  justify-content: center;\n  align-items: center;\n  column-gap: 8px;\n  gap: 13px;\n\n  background-color: ${theme.palette.secondary.light};\n  border: 1px dashed ${theme.palette.custom.borderLight};\n  border-radius: 8px;\n\n  font-size: 14px;\n  line-height: 18px;\n\n  cursor: pointer;\n  transition: border 200ms cubic-bezier(0.9, 0, 0.2, 1) 0ms;\n  margin-top: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1.5px dashed ${theme.palette.primary.main};\n  }\n\n  & svg {\n    stroke: #111111;\n    fill: none;\n    width: 24px;\n    height: 24px;\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import React from 'react';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport { Button } from './AddTaskBtn.styled';\n\nconst AddTaskBtn = ({ openTaskModal, checkCurrentDate }) => {\n  return (\n    <>\n      <Button\n        className={`${checkCurrentDate ? '' : 'disabled'} addTaskButton`}\n        onClick={openTaskModal}\n      >\n        <svg>\n          <use href={sprite + '#icon-plus'} />\n        </svg>\n        <p>Add task</p>\n      </Button>\n    </>\n  );\n};\nexport default AddTaskBtn;\n","import theme from 'shared/theme';\nimport styled from 'styled-components';\n\nexport const ColumnHeadBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 35px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 31px;\n  }\n\n  & p {\n    font-size: 18px;\n    line-height: 20px;\n    color: ${theme.palette.grey.body};\n    font-weight: 700;\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 24px;\n    }\n  }\n  & button {\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n    transition: stroke 200ms cubic-bezier(0.9, 0, 0.2, 1) 0ms;\n\n    & svg {\n      fill: none;\n      stroke: ${theme.palette.grey.body};\n      width: 18.33px;\n      height: 18.33px;\n      transition: stroke 200ms cubic-bezier(0.9, 0, 0.2, 1) 0ms;\n\n      &:hover,\n      &:focus {\n        stroke: ${theme.palette.primary.main};\n      }\n      @media screen and (min-width: 768px) {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    &.disabled {\n      cursor: not-allowed;\n      opacity: 0.6;\n      pointer-events: none;\n    }\n  }\n`;\n","import React from 'react';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport { ColumnHeadBarWrapper } from './ColumnHeaderBar';\n\nconst ColumnHeadBar = ({ title, openTaskModal, checkCurrentDate }) => {\n  return (\n    <>\n      <ColumnHeadBarWrapper className=\"columnHeadBar\">\n        <p>{title}</p>\n        <button\n          onClick={openTaskModal}\n          className={checkCurrentDate ? '' : 'disabled'}\n        >\n          <svg>\n            <use href={sprite + '#plusInCircle'} />\n          </svg>\n        </button>\n      </ColumnHeadBarWrapper>\n    </>\n  );\n};\n\nexport default ColumnHeadBar;\n","import theme from 'shared/theme';\nimport styled from 'styled-components';\n\nexport const BoxWrapper = styled.li`\n  height: 108px;\n  border-radius: 8px;\n  border: 1px solid ${theme.palette.grey.light};\n  background-color: ${theme.palette.grey[200]};\n  padding: 14px 14px 18px 14px;\n  margin-bottom: 14px;\n  overflow: hidden;\n\n  &: last-child {\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n    margin-bottom: 18px;\n  }\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 28px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n\n  & p {\n    @media screen and (max-width: 375px) {\n      width: auto;\n    }\n    color: ${theme.palette.grey.body};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 18px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    width: 240px;\n    white-space: nowrap;\n  }\n`;\n\nexport const InfoBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const UserBar = styled.div`\n  display: flex;\n  gap: 8px;\n\n  & img {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1.8px solid ${theme.palette.primary.main};\n  }\n`;\n\nexport const Priority = styled.p`\n  align-self: flex-end;\n  color: ${theme.palette.grey[200]};\n  padding: 4px 12px;\n\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 12px;\n  background: #72c2f8;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n\n  &.low {\n    background-color: ${theme.palette.custom.lightBlue};\n  }\n\n  &.medium {\n    background-color: ${theme.palette.warning.main};\n  }\n\n  &.high {\n    background-color: ${theme.palette.error.main};\n  }\n`;\n","import { Menu, MenuItem } from '@mui/material';\nimport theme from 'shared/theme';\nimport styled from 'styled-components';\n\nexport const TaskToolbarList = styled.ul`\n  display: flex;\n  gap: 14px;\n  justify-content: center;\n  align-items: center;\n\n  & button {\n    display: flex;\n    flex-direction: row;\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n    padding: 0;\n  }\n\n  & svg {\n    stroke: ${theme.palette.grey.body};\n    fill: none;\n    display: inline;\n    width: 14px;\n    height: 14px;\n    opacity: 1;\n    transition: stroke 200ms cubic-bezier(0.9, 0, 0.2, 1) 0ms;\n\n    &:hover,\n    &:focus {\n      stroke: ${theme.palette.primary.main};\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n\nexport const MenuList = styled(Menu)`\n  & .css-1ka5eyc-MuiPaper-root-MuiMenu-paper-MuiPopover-paper {\n    @media screen and (min-width: 768px) {\n      height: 80px;\n      width: 130px;\n    }\n  }\n\n  @media screen and (max-width: 375px) {\n    & .css-6hp17o-MuiList-root-MuiMenu-list {\n      padding-top: 3px;\n      padding-bottom: 3px;\n    }\n\n    & .css-ib3qtv-MuiButtonBase-root-MuiMenuItem-root {\n      padding-left: 6px;\n      padding-right: 6px;\n      padding-top: 3px;\n      padding-bottom: 3px;\n    }\n  }\n`;\n\nexport const MenuItemColumn = styled(MenuItem)`\n  padding: 0;\n  & svg {\n    height: 14px;\n    width: 14px;\n    stroke: ${theme.palette.grey[600]};\n    fill: none;\n    display: inline;\n    width: 14px;\n    height: 14px;\n    opacity: 1;\n    transition: stroke 200ms cubic-bezier(0.9, 0, 0.2, 1) 0ms;\n\n    @media screen and (min-width: 768px) {\n      height: 16px;\n      width: 16px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 30px;\n  }\n`;\n\nexport const CategoryTitle = styled.span`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.4;\n  color: ${theme.palette.grey[600]};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n","import { useState } from 'react';\n\nconst useModal = (\n  initialState = { isOpen: false, action: '', details: null }\n) => {\n  const [modalState, setModalState] = useState(initialState);\n\n  const openModal = (action, details = null) =>\n    setModalState({ isOpen: true, action, details });\n\n  const closeModal = () => setModalState(initialState);\n\n  const toggleModal = (action, details = null) =>\n    setModalState(prevState => {\n      const isOpen = !prevState.isOpen;\n      return { isOpen, action, details };\n    });\n\n  return {\n    isOpen: modalState.isOpen,\n    action: modalState.action,\n    details: modalState.details,\n    openModal,\n    closeModal,\n    toggleModal,\n  };\n};\n\nexport default useModal;\n","export const checkDarkTheme = () => {\n  const theme = localStorage.getItem('darkModeGooseTrack');\n  return theme === 'true';\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport IconButton from '@mui/material/IconButton';\nimport sprite from 'shared/icons/sprite.svg';\nimport { checkDarkTheme } from 'shared/utils/checkDarkTheme';\nModal.setAppElement('#root');\n\nconst CustomModal = ({ children, ...props }) => {\n  const { isOpen, onClose, action } = props;\n  const [width, setWidth] = useState(window.innerWidth);\n  const [darkTheme, setDarkTheme] = useState(checkDarkTheme());\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    setDarkTheme(checkDarkTheme());\n  }, []);\n\n  const closeButtonStyles = {\n    position: 'absolute',\n    padding: '14px',\n    top: 0,\n    right: 0,\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    '&:hover svg': {\n      stroke: '#3E85F3',\n    },\n    svg: {\n      stroke: darkTheme ? '#FFFFFF' : '#111111',\n    },\n  };\n\n  const modalContentStyles = {\n    background: darkTheme ? '#171820' : '#FFFFFF',\n    border: darkTheme\n      ? '1px solid #ffffff26'\n      : '1px solid rgba(220, 227, 229, 0.8)',\n  };\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    },\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      width: width >= 768 ? '396px' : '303px',\n      maxWidth: '100%',\n      paddingTop: width >= 768 ? '40px' : '48px',\n      paddingBottom: '40px',\n      paddingLeft: width >= 768 ? '28px' : '18px',\n      paddingRight: width >= 768 ? '28px' : '18px',\n\n      borderRadius: '8px',\n      boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n      transform: 'translate(-50%, -50%)',\n      ...modalContentStyles,\n    },\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentLabel={`Modal window  to ${action} task`}\n      closeTimeoutMS={300}\n      shouldCloseOnOverlayClick={true}\n      onRequestClose={onClose}\n      style={{\n        overlay: customStyles.overlay,\n        content: customStyles.content,\n      }}\n    >\n      <IconButton\n        aria-label=\"close modal\"\n        sx={closeButtonStyles}\n        onClick={() => onClose()}\n        className=\"close-modal-btn\"\n      >\n        <svg width=\"20\" height=\"20\">\n          <use xlinkHref={`${sprite}#close`} />\n        </svg>\n      </IconButton>\n      {children}\n    </Modal>\n  );\n};\n\nCustomModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  action: PropTypes.string.isRequired,\n};\n\nexport default CustomModal;\n","import styled from 'styled-components';\nimport { TimeField } from '@mui/x-date-pickers/TimeField';\nimport theme from 'shared/theme';\n\nconst commonInputStyles = `\n  border-radius: 8px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.29;\n  padding: 12px 14px;\n  @media screen and (min-width: 768px) {\n    padding: 14px 18px;\n  }\n  &:focus {\n    outline: 1px solid ${theme.palette.primary.main};\n  }\n`;\n\nconst commonButtonStyles = `\n  height: 42px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    height: 48px;\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n`;\n\nconst commonOperationBtnStyles = `\n  ${commonButtonStyles}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 8px;\n  color: #ffffff;\n  background-color: ${theme.palette.primary.main};\n`;\n\nconst commonWarningStyles = `\n  position: absolute;\n  bottom: -14px;\n  width: 100%;\n  margin: 0;\n  margin-top: 8px;\n  font-size: 10px;\n  color: ${theme.palette.error.main};\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  row-gap: 32px;\n\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: 0;\n    padding: 0;\n    white-space: nowrap;\n    clip-path: inset(100%);\n    clip: rect(0 0 0 0);\n    overflow: hidden;\n  }\n`;\n\nexport const InfoInput = styled.input`\n  ${commonInputStyles}\n  &:focus {\n    outline: 1px solid ${theme.palette.primary.main};\n  }\n  &::placeholder {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.29;\n    padding: 0;\n    opacity: 1;\n  }\n`;\n\nexport const Block = styled.div``;\n\nexport const InfoWrapper = styled.div`\n  ${Block} {\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    row-gap: 16px;\n    column-gap: 15px;\n    margin-bottom: 18px;\n    @media screen and (min-width: 768px) {\n      row-gap: 18px;\n      column-gap: 14px;\n      margin-bottom: 28px;\n    }\n  }\n`;\n\nexport const Info = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  width: 100%;\n  &:nth-child(2),\n  &:nth-child(3) {\n    width: calc(50% - 7.5px);\n    @media screen and (min-width: 768px) {\n      width: calc(50% - 7px);\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  text-transform: capitalize;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n\n  font-family: ${theme.typography.fontFamily};\n`;\n\nexport const TimePicker = styled(TimeField)`\n  input {\n    ${commonInputStyles}\n  }\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  column-gap: 14px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const CancelButton = styled.button`\n  ${commonButtonStyles}\n  padding-left: 35px;\n  padding-right: 35px;\n  color: ${theme.palette.grey.body};\n  background-color: ${theme.palette.grey[100]};\n  @media screen and (min-width: 768px) {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n`;\n\nexport const AddButton = styled.button`\n  ${commonOperationBtnStyles};\n  padding-left: 40px;\n  padding-right: 40px;\n  @media screen and (min-width: 768px) {\n    padding-left: 63px;\n    padding-right: 63px;\n  }\n  svg {\n    stroke: currentColor;\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const EditButton = styled.button`\n  ${commonOperationBtnStyles};\n  padding-left: 108px;\n  padding-right: 108px;\n  @media screen and (min-width: 768px) {\n    padding-left: 140px;\n    padding-right: 140px;\n  }\n  svg {\n    stroke: currentColor;\n    fill: ${theme.palette.primary.main};\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const WarningTime = styled.p`\n  ${commonWarningStyles};\n`;\nexport const WarningTitle = styled.p`\n  ${commonWarningStyles};\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { ukUA } from '@mui/x-date-pickers/locales';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { TimePicker } from '../TaskForm.styled';\nimport { checkDarkTheme } from 'shared/utils/checkDarkTheme';\nimport theme from 'shared/theme';\n\nconst TimePickerWithLocalization = ({ label, value, onChange }) => {\n  const [darkTheme, setDarkTheme] = useState(checkDarkTheme());\n\n  const localeText =\n    ukUA.components.MuiLocalizationProvider.defaultProps.localeText;\n\n  const timePickerStyles = {\n    border: darkTheme\n      ? `1px solid ${theme.palette.custom.pagDarkBorder}`\n      : `none`,\n    backgroundColor: darkTheme ? `transparent` : `${theme.palette.grey.input}`,\n\n    borderRadius: '8px',\n    '& .MuiOutlinedInput-root': {\n      color: darkTheme\n        ? `${theme.palette.custom.mainWhite}`\n        : `${theme.palette.grey[600]}`,\n      '& fieldset': {\n        border: 'none',\n        borderRadius: '8px',\n      },\n      '&:hover fieldset': {\n        borderColor: 'transparent',\n      },\n    },\n  };\n\n  useEffect(() => {\n    setDarkTheme(checkDarkTheme());\n  }, []);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs} localeText={localeText}>\n      <TimePicker\n        format=\"HH:mm\"\n        sx={timePickerStyles}\n        name={label}\n        value={value}\n        onChange={onChange}\n      />\n    </LocalizationProvider>\n  );\n};\nTimePickerWithLocalization.propTypes = {\n  label: PropTypes.string.isRequired,\n  // value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TimePickerWithLocalization;\n","const capitalizeString = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nexport default capitalizeString;\n","export const TASKS_PRIORITY = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n};\n","export const TASKS_CATEGORY = {\n  TODO: 'to-do',\n  INPROGRESS: 'in-progress',\n  DONE: 'done',\n};\n\nexport const COLUMN_TASKS = [\n  {\n    categories: 'to-do',\n    title: 'To do',\n  },\n  {\n    categories: 'in-progress',\n    title: 'In progress',\n  },\n  {\n    categories: 'done',\n    title: 'Done',\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from '@mui/material';\nimport capitalizeString from 'shared/utils/capitalizeString';\nimport theme from 'shared/theme';\nimport { TASKS_PRIORITY } from 'shared/constants';\nimport { checkDarkTheme } from 'shared/utils/checkDarkTheme';\n\nconst radioStyles = {\n  low: {\n    color: theme.palette.custom.lightBlue,\n    iconColor: 'rgba(114, 194, 248, 0.5)',\n  },\n  medium: {\n    color: theme.palette.warning.main,\n    iconColor: 'rgba(243, 178, 73, 0.5)',\n  },\n  high: {\n    color: theme.palette.error.main,\n    iconColor: 'rgba(234, 61, 101, 0.5)',\n  },\n};\n\nconst RadioIcon = ({ color, borderColor }) => (\n  <span\n    style={{\n      width: '14px',\n      height: '14px',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: `1.3px solid ${borderColor}`,\n    }}\n  >\n    <span\n      style={{\n        width: '10px',\n        height: '10px',\n        borderRadius: '50%',\n        backgroundColor: color,\n      }}\n    />\n  </span>\n);\n\nexport const PriorityList = ({ defaultValue, handleChange }) => {\n  const [priority, setPriority] = useState(defaultValue);\n  const [darkTheme, setDarkTheme] = useState(checkDarkTheme());\n\n  useEffect(() => {\n    setDarkTheme(checkDarkTheme());\n  }, []);\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\" className=\"sr-only\">\n        Priority\n      </FormLabel>\n      <RadioGroup\n        row\n        value={priority}\n        onChange={event => {\n          setPriority(event.target.value);\n          handleChange(event.target.value);\n        }}\n        sx={{ columnGap: '16px' }}\n      >\n        {[TASKS_PRIORITY.LOW, TASKS_PRIORITY.MEDIUM, TASKS_PRIORITY.HIGH].map(\n          (value, index) => (\n            <FormControlLabel\n              key={index}\n              value={value}\n              control={\n                <Radio\n                  value={value}\n                  icon={\n                    <RadioIcon\n                      color={radioStyles[value].color}\n                      borderColor={darkTheme ? 'transparent' : '#ffffff'}\n                    />\n                  }\n                  checkedIcon={\n                    <RadioIcon\n                      color={radioStyles[value].color}\n                      borderColor={radioStyles[value].iconColor}\n                    />\n                  }\n                  sx={{\n                    padding: '0px',\n                    marginRight: '6px',\n                  }}\n                />\n              }\n              label={capitalizeString(value)}\n              sx={{\n                marginLeft: '0px',\n                marginRight: '0px',\n                '& .MuiTypography-root': {\n                  fontWeight: 600,\n                  fontSize: '12px',\n                  lineHeight: '1.17',\n                  color: darkTheme ? '#ffffff' : '#616161',\n                },\n              }}\n            />\n          )\n        )}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nPriorityList.propTypes = {\n  defaultValue: PropTypes.oneOf([\n    TASKS_PRIORITY.LOW,\n    TASKS_PRIORITY.MEDIUM,\n    TASKS_PRIORITY.HIGH,\n  ]).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n\ndayjs.extend(utc);\n\nconst getTimeStringWithDate = (timeString, dateString) => {\n  const [dateOnly] = dateString.split('T');\n  const parsedTime = dayjs.utc(\n    `${dateOnly}T${timeString.replace('-', ':')}:00.000Z`\n  );\n  return parsedTime.format('YYYY-MM-DDTHH:mm');\n};\n\nexport default getTimeStringWithDate;\n","import * as Yup from 'yup';\nconst taskValidationSchema = Yup.object().shape({\n  title: Yup.string()\n    .max(\n      250,\n      'The title is required to have a maximum limit of 250 characters.'\n    )\n    .required('Please write the title of task.'),\n  start: Yup.string()\n\n    .matches(/^([0-1][0-9]|2[0-3])-([0-5][0-9])$/, {\n      message:\n        'Please ensure that the start time for the task is specified in the format of HH-MM.',\n    })\n    .required('Start time is required'),\n  end: Yup.string()\n    .matches(/^([0-1][0-9]|2[0-3])-([0-5][0-9])$/, {\n      message:\n        'Please ensure that the end time for the task is specified in the format of HH-MM.',\n    })\n    .test(\n      'greater-than-start',\n      'End time must not be earlier than start time.',\n      function (value) {\n        const { start } = this.parent;\n        if (!start) {\n          return true;\n        }\n        const startTime = parseInt(start.replace('-', ''), 10);\n        const endTime = parseInt(value.replace('-', ''), 10);\n        return endTime > startTime;\n      }\n    )\n    .required('End time is required.'),\n  priority: Yup.string()\n    .oneOf(\n      ['low', 'medium', 'high'],\n      'Priority must be one of \"low\", \"medium\", or \"high\".'\n    )\n    .required('Priority is required'),\n  date: Yup.date()\n    .typeError('Please enter a valid date in the format YYYY-MM-DD.')\n    .required('Date is required.'),\n  category: Yup.string()\n    .oneOf(\n      ['to-do', 'in-progress', 'done'],\n      'Category must be one of \"to-do\", \"in-progress\", or \"done\".'\n    )\n    .required('Category is required.'),\n});\n\nexport default taskValidationSchema;\n","import taskValidationSchema from './taskValidationSchema';\nimport { showErrorValidation } from 'shared/utils/notifications';\nexport const validateForm = async task => {\n  try {\n    await taskValidationSchema.validate(task, { abortEarly: false });\n  } catch (error) {\n    const validationErrors = [...error.errors].join(' ');\n    showErrorValidation(validationErrors);\n    return false;\n  }\n\n  return true;\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { useDispatch } from 'react-redux';\nimport {\n  StyledForm,\n  InfoWrapper,\n  Block,\n  Info,\n  InfoInput,\n  ButtonList,\n  AddButton,\n  EditButton,\n  CancelButton,\n  WarningTime,\n  WarningTitle,\n  Label,\n} from './TaskForm.styled';\nimport TimePickerWithLocalization from './TimePickerWithLocalization/TimePickerWithLocalization';\nimport sprite from 'shared/icons/sprite.svg';\nimport { PriorityList } from './PriorityList/PriorityList';\nimport { TASKS_PRIORITY } from 'shared/constants';\nimport getTimeStringWithDate from 'shared/utils/getTimeStringWithDate';\nimport theme from 'shared/theme';\nimport {\n  showError,\n  showEmptyTitle,\n  showAnyError,\n} from 'shared/utils/notifications';\nimport { validateForm } from './validateForm';\nimport { createTask, updateTask } from 'redux/tasks/tasksOperations';\nimport { checkDarkTheme } from 'shared/utils/checkDarkTheme';\n\nconst TaskForm = props => {\n  const [darkTheme, setDarkTheme] = useState(checkDarkTheme());\n  const { action, onClose, category, date, taskDetails } = props;\n  const [title, setTitle] = useState(taskDetails.title || '');\n  const [priority, setPriority] = useState(\n    taskDetails.priority || TASKS_PRIORITY.LOW\n  );\n  useEffect(() => {\n    setDarkTheme(checkDarkTheme());\n  }, []);\n\n  const dispatch = useDispatch();\n  const getDefaultStartTime = (taskDetails, date) => {\n    return taskDetails.start\n      ? dayjs(getTimeStringWithDate(taskDetails.start, date))\n      : dayjs();\n  };\n\n  const getDefaultEndTime = (taskDetails, date) => {\n    return taskDetails.end\n      ? dayjs(getTimeStringWithDate(taskDetails.end, date))\n      : dayjs().hour(23).minute(59);\n  };\n  const [start, setStart] = useState(getDefaultStartTime(taskDetails, date));\n  const [end, setEnd] = useState(getDefaultEndTime(taskDetails, date));\n\n  const createTaskObject = ({\n    title,\n    start,\n    end,\n    priority,\n    category,\n    date,\n  }) => {\n    const taskStart = start.format('HH-mm');\n    const taskEnd = end.format('HH-mm');\n\n    return {\n      title: title,\n      start: taskStart,\n      end: taskEnd,\n      priority: priority,\n      category: category,\n      date: date,\n    };\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmedTitle = title.trim();\n    if (end === null && start === null) {\n      return showAnyError(\n        'Please, write the start and the end time for your task'\n      );\n    }\n    if (start === null) {\n      return showAnyError('Please, write the start time for your task');\n    }\n    if (end === null) {\n      return showAnyError('Please, write the end time for your task');\n    }\n\n    if (trimmedTitle.length === 0) {\n      return showEmptyTitle();\n    }\n    const task = createTaskObject({\n      title: trimmedTitle,\n      start,\n      end,\n      priority,\n      category,\n      date,\n    });\n\n    const isValid = await validateForm(task);\n    if (isValid) {\n      const result =\n        action === 'add'\n          ? await dispatch(createTask(task))\n          : await dispatch(\n              updateTask({ taskId: taskDetails.id, taskData: task })\n            );\n\n      if (result.error) {\n        return showError();\n      }\n\n      onClose();\n    }\n  };\n  const isTimeWarning = useMemo(() => end?.isBefore(start), [end, start]);\n\n  const labelStyles = {\n    color: darkTheme\n      ? `${theme.palette.custom.labelDark}`\n      : `${theme.palette.grey[500]}`,\n  };\n\n  const inputStyles = {\n    color: darkTheme\n      ? `${theme.palette.custom.mainWhite}`\n      : `${theme.palette.grey[600]}`,\n    backgroundColor: darkTheme ? `transparent` : `${theme.palette.grey.input}`,\n    border: darkTheme\n      ? `1px solid ${theme.palette.custom.pagDarkBorder}`\n      : `none`,\n  };\n\n  return (\n    <StyledForm\n      onSubmit={handleSubmit}\n      style={{ fontFamily: theme.typography.fontFamily }}\n    >\n      <InfoWrapper>\n        <Block>\n          <Info>\n            <Label htmlFor=\"title\" style={{ ...labelStyles }}>\n              {' '}\n              Title\n            </Label>\n            <InfoInput\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter text\"\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n              style={{ ...inputStyles }}\n            />\n            {title.length > 250 && (\n              <WarningTitle>*Title limit: 250 characters max</WarningTitle>\n            )}\n          </Info>\n          <Info>\n            <Label htmlFor=\"start\" style={{ ...labelStyles }}>\n              Start\n            </Label>\n            <TimePickerWithLocalization\n              label=\"start\"\n              value={start}\n              onChange={newValue => setStart(newValue)}\n            />\n          </Info>\n\n          <Info>\n            <Label htmlFor=\"end\" style={{ ...labelStyles }}>\n              End\n            </Label>\n            <TimePickerWithLocalization\n              label=\"end\"\n              value={end}\n              onChange={newValue => setEnd(newValue)}\n            />\n          </Info>\n\n          {isTimeWarning && (\n            <WarningTime>\n              *End time must not be earlier than start time.\n            </WarningTime>\n          )}\n        </Block>\n        <PriorityList defaultValue={priority} handleChange={setPriority} />\n      </InfoWrapper>\n      {action === 'add' ? (\n        <ButtonList>\n          <li>\n            <AddButton type=\"submit\">\n              <svg>\n                <use xlinkHref={`${sprite}#icon-plus`} />\n              </svg>\n              Add\n            </AddButton>\n          </li>\n          <li>\n            <CancelButton type=\"button\" onClick={onClose}>\n              Cancel\n            </CancelButton>\n          </li>\n        </ButtonList>\n      ) : (\n        <EditButton type=\"submit\">\n          <svg>\n            <use xlinkHref={`${sprite}#pencil`} />\n          </svg>\n          Edit\n        </EditButton>\n      )}\n    </StyledForm>\n  );\n};\n\nexport default TaskForm;\n\nTaskForm.propTypes = {\n  action: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onClose: PropTypes.func.isRequired,\n  category: PropTypes.oneOf(['to-do', 'in-progress', 'done']),\n  date: PropTypes.string,\n  taskDetails: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    start: PropTypes.string,\n    end: PropTypes.string,\n    priority: PropTypes.oneOf(['low', 'medium', 'high']),\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CustomModal from '../CustomModal/CustomModal';\nimport TaskForm from '../TaskForm/TaskForm';\n\nconst TaskModal = props => {\n  const { action, onClose, isOpen, category, date, taskDetails } = props;\n  return (\n    <CustomModal action={action} onClose={onClose} isOpen={isOpen}>\n      <TaskForm\n        action={action}\n        onClose={onClose}\n        category={category}\n        date={date}\n        taskDetails={taskDetails}\n      />\n    </CustomModal>\n  );\n};\n\nexport default TaskModal;\n\nTaskModal.propTypes = {\n  action: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  category: PropTypes.oneOf(['to-do', 'in-progress', 'done']),\n  date: PropTypes.string,\n  taskDetails: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    start: PropTypes.string,\n    end: PropTypes.string,\n    priority: PropTypes.oneOf(['low', 'medium', 'high']),\n  }),\n};\n","import React, { useState } from 'react';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport {\n  CategoryTitle,\n  MenuItemColumn,\n  MenuList,\n  TaskToolbarList,\n} from './TaskToolbar.styled';\nimport useModal from 'shared/hooks/useModal';\nimport TaskModal from 'shared/components/TaskModal/TaskModal';\n// import {\n//   showSuccessDeleteTask,\n//   showSuccessMoveTask,\n// } from 'shared/utils/notifications';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, updateTask } from 'redux/tasks/tasksOperations';\n\nimport { COLUMN_TASKS } from 'shared/constants/tasksCategory';\nimport { Button } from '@mui/material';\nimport theme from 'shared/theme';\n\nconst TaskToolbar = ({ ...taskData }) => {\n  const dispatch = useDispatch();\n\n  const { priority, category, date, title, start, end, _id: id } = taskData;\n  const { isOpen, action, closeModal, toggleModal, details } = useModal();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const editedTaskDetails = {\n    id,\n    title,\n    start,\n    end,\n    priority,\n  };\n\n  const availableCategories = COLUMN_TASKS.filter(\n    item => item.categories !== category\n  );\n\n  const handleMoveTask = newCategory => {\n    const updatingTask = {\n      ...taskData,\n      category: newCategory,\n    };\n    dispatch(updateTask({ taskId: id, taskData: updatingTask }));\n  };\n\n  const handleEditTaskClick = () => {\n    toggleModal('edit', { details: editedTaskDetails });\n  };\n\n  const handleDeleteTask = taskId => {\n    dispatch(deleteTask(taskId));\n  };\n\n  const isMobile = theme.breakpoints.values.xs;\n\n  return (\n    <>\n      <TaskToolbarList>\n        <li>\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            sx={{ minWidth: 16 }}\n          >\n            <svg>\n              <use href={sprite + '#arrowInCircle'} />\n            </svg>\n          </Button>\n          <MenuList\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n            transformOrigin={\n              isMobile\n                ? { horizontal: 'right', vertical: 'top' }\n                : { horizontal: 'left', vertical: 'top' }\n            }\n            anchorOrigin={\n              isMobile\n                ? { horizontal: 'right', vertical: 'bottom' }\n                : { horizontal: 'left', vertical: 'bottom' }\n            }\n          >\n            {availableCategories.map(category => (\n              <MenuItemColumn\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  gap: '8px',\n                  padding: '10',\n                }}\n                key={category.categories}\n                onClick={() => {\n                  handleMoveTask(category.categories);\n                }}\n              >\n                <CategoryTitle>{category.title}</CategoryTitle>\n                <svg>\n                  <use href={sprite + '#arrowInCircle'} />\n                </svg>\n              </MenuItemColumn>\n            ))}\n          </MenuList>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            onClick={() => {\n              handleEditTaskClick();\n            }}\n          >\n            <svg>\n              <use href={sprite + '#pencil'} />\n            </svg>\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            onClick={() => {\n              handleDeleteTask(id);\n            }}\n          >\n            <svg>\n              <use href={sprite + '#trash'} />\n            </svg>\n          </button>\n        </li>\n      </TaskToolbarList>\n\n      {isOpen && (\n        <TaskModal\n          action={action}\n          onClose={closeModal}\n          isOpen={isOpen}\n          category={category}\n          date={date}\n          taskDetails={details ? details.details : {}}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskToolbar;\n","import React from 'react';\nimport {\n  BoxWrapper,\n  InfoBar,\n  Title,\n  UserBar,\n  Priority,\n} from './TaskColumnCard.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport clsx from 'clsx';\nimport TaskToolbar from '../TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ ...task }) => {\n  const { priority, title } = task;\n\n  const { userImgUrl } = useSelector(selectUser);\n\n  return (\n    <BoxWrapper key={task._id} className=\"boxWrapperTask\">\n      <Title>\n        <p>{title}</p>\n      </Title>\n      <InfoBar>\n        <UserBar>\n          <img src={userImgUrl} alt=\"avatar\" />\n          <Priority\n            className={clsx({\n              low: priority === 'low',\n              medium: priority === 'medium',\n              high: priority === 'high',\n            })}\n          >\n            {priority}\n          </Priority>\n        </UserBar>\n        <TaskToolbar {...task} />\n      </InfoBar>\n    </BoxWrapper>\n  );\n};\n\nexport default TaskColumnCard;\n","import styled from 'styled-components';\n\nexport const TasksWrapper = styled.ul`\n  max-height: 280px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    max-height: 376px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 300px;\n  }\n`;\n","import React from 'react';\nimport TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\nimport { TasksWrapper } from './ColumnsTasksList.styled';\n\nconst ColumnsTasksList = ({ tasks }) => {\n  const lowTasks = tasks?.filter(task => task.priority === 'low');\n  const mediumTasks = tasks?.filter(task => task.priority === 'medium');\n  const highTasks = tasks?.filter(task => task.priority === 'high');\n\n  const filteredTasks = [...lowTasks, ...mediumTasks, ...highTasks];\n\n  return (\n    <TasksWrapper>\n      {filteredTasks.map(task => (\n        <TaskColumnCard key={task._id} {...task} />\n      ))}\n    </TasksWrapper>\n  );\n};\n\nexport default ColumnsTasksList;\n","import styled from 'styled-components';\nimport { Paper, Grid } from '@mui/material';\nimport theme from 'shared/theme';\n\nexport const ContainerTask = styled.div`\n  width: 100%;\n  min-width: 335px;\n  max-height: 432px;\n  min-height: 155px;\n  height: 100%;\n  border: 1px solid ${theme.palette.grey.light};\n  border-radius: 8px;\n  background-color: ${theme.palette.custom.mainWhite};\n  padding: 25px 18px 10px 18px;\n\n  &: last-child {\n    margin-right: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 25px 20px 28px 20px;\n    min-width: 344px;\n    max-height: 568px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 344px;\n  }\n`;\n\nexport const GridItem = styled(Grid)`\n  width: 100%,\n  max-width: 311px;\n  max-height: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-height: 376px;\n\n  }\n\n  //  ------- scrollbarTrack ------- //\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 12px;\n    margin-left: 10px;\n\n    background: ${theme.palette.custom.bgScrollbarTrack};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${theme.palette.custom.scrollbarThumb};\n    border-radius: 12px;\n    margin-left: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${theme.palette.custom.pagBorder};\n  }\n  //  ------- scrollbarTrack ------- //\n\n  @media screen and (min-width: 768px) {\n    width: 315px;\n    ::-webkit-scrollbar {\n      width: 8px;\n    }\n  }\n`;\n\nexport const PaperTask = styled(Paper)`\n  align-items: flex-start;\n\n  @media screen and (min-width: 768px) {\n    max-height: 376px;\n    width: 300px;\n  }\n\n  & .MuiPaper-root {\n    background-color: rose;\n  }\n`;\n","import React from 'react';\nimport AddTaskBtn from '../AddTaskBtn/AddTaskBtn';\nimport ColumnHeadBar from '../ColumnHeadBar/ColumnHeadBar';\nimport ColumnsTasksList from '../ColumnsTasksList/ColumnsTasksList';\nimport theme from '../../../../shared/theme';\nimport { ContainerTask, GridItem, PaperTask } from './TasksColumn.styled';\nimport useModal from 'shared/hooks/useModal';\nimport TaskModal from 'shared/components/TaskModal/TaskModal';\n\nconst TasksColumn = ({ title, tasks, category, currentDay }) => {\n  const { isOpen, action, closeModal, toggleModal, details } = useModal();\n\n  const handleAddTaskClick = () => {\n    toggleModal('add', { details: {} });\n  };\n\n  const checkCurrentDate = () => {\n    const taskCurrentday = new Date(currentDay).toISOString().slice(0, 10);\n    const today = new Date().toISOString().slice(0, 10);\n    // console.log('taskCurrentday:', taskCurrentday);\n    // console.log('today:', today);\n\n    if (taskCurrentday < today) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <ContainerTask className=\"containerTask\">\n      <ColumnHeadBar\n        title={title}\n        openTaskModal={handleAddTaskClick}\n        checkCurrentDate={checkCurrentDate()}\n      />\n      <GridItem\n        item\n        className=\"darkScrollbarTrack\"\n        marginBottom={{ md: 3 }}\n        sx={{\n          padding: '0',\n          margin: '0',\n          overflowY: 'auto',\n          flexDirection: 'column',\n          backgroundColor: theme.palette.primary.body,\n        }}\n      >\n        <PaperTask\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            boxShadow: 'none',\n            '&.MuiPaper-root': {\n              backgroundColor: 'transparent',\n            },\n          }}\n        >\n          {tasks && <ColumnsTasksList tasks={tasks} />}\n        </PaperTask>\n      </GridItem>\n      <AddTaskBtn\n        openTaskModal={handleAddTaskClick}\n        checkCurrentDate={checkCurrentDate()}\n      />\n      {isOpen && (\n        <TaskModal\n          action={action}\n          onClose={closeModal}\n          isOpen={isOpen}\n          category={category}\n          date={currentDay}\n          taskDetails={details ? details.details : {}}\n        />\n      )}\n    </ContainerTask>\n  );\n};\n\nexport default TasksColumn;\n","import styled from 'styled-components';\nimport { Grid } from '@mui/material';\nimport theme from 'shared/theme';\n\nexport const GridContainer = styled(Grid)`\n  max-height: 432px;\n  margin-top: 16px;\n  gap: 16px;\n  flex-direction: column;\n  overflow-x: scroll;\n  width: 100%;\n  width: 335px;\n  max-width: 1087px;\n  &.MuiGrid-container {\n    width: 335px;\n  }\n  //  ------- scrollbarTrack ------- //\n  ::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 12px;\n    background: ${theme.palette.custom.bgScrollbarTrack};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${theme.palette.custom.scrollbarThumb};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${theme.palette.grey.light};\n  }\n\n  //  ------- scrollbarTrack ------- //\n\n  @media screen and (min-width: 768px) {\n    max-height: 568px;\n    min-height: 165px;\n    gap: 20px;\n    margin-bottom: 16px;\n\n    ::-webkit-scrollbar {\n      height: 14px;\n    }\n    &.MuiGrid-container {\n      width: 728px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    overflow: hidden;\n    &.MuiGrid-container {\n      width: 1086px;\n    }\n  }\n`;\n","import React from 'react';\nimport TasksColumn from '../TasksColumn/TasksColumn';\nimport { COLUMN_TASKS } from 'shared/constants/tasksCategory';\nimport { GridContainer } from './TasksColumnsList.styled';\n\nconst TasksColumnsList = ({ tasks, currentDay }) => {\n  const allTask = [];\n\n  const tasksList = Object.keys(tasks).map(taskKey => {\n    return { [taskKey]: tasks[taskKey] };\n  });\n\n  const taskColumn = () => {\n    tasksList?.map(tasks => {\n      return Object.values(tasks).map(tasks2 => {\n        return tasks2?.forEach(element => {\n          allTask.push(element);\n        });\n      });\n    });\n  };\n  taskColumn();\n\n  const categories = ['to-do', 'in-progress', 'done'];\n  const tasksByCategory = categories.reduce((acc, category) => {\n    acc[category] = allTask?.filter(task => task.category === category);\n    return acc;\n  }, {});\n\n  return (\n    <GridContainer\n      container\n      flexDirection=\"row\"\n      flexWrap=\"nowrap\"\n      spacing={2}\n      className=\"darkScrollbarTrack\"\n      marginBottom={{ md: 3 }}\n      sx={{\n        overflowY: 'hidden',\n        overflowX: 'auto',\n        '&.MuiGrid-container': {\n          padding: 0,\n          margin: 1,\n          marginLeft: 0,\n          marginRight: 0,\n        },\n      }}\n    >\n      {COLUMN_TASKS.map(column => (\n        <TasksColumn\n          category={column.categories}\n          key={column.categories}\n          title={column.title}\n          tasks={tasksByCategory[column.categories]}\n          currentDay={currentDay}\n        />\n      ))}\n    </GridContainer>\n  );\n};\n\nexport default TasksColumnsList;\n","import CalendarHead from 'modules/CalendarComponent/components/CalendarHead/CalendarHead';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllTasks } from 'redux/tasks/tasksSelectors';\nimport TasksColumnsList from '../TasksColumnsList/TasksColumnsList';\nimport { useParams } from 'react-router';\n\nexport const ChosenDay = () => {\n  const { currentDay } = useParams();\n  const tasksAll = useSelector(selectAllTasks);\n  const [tasksCurrentDay, setTasksCurrentDay] = useState({\n    todoTasks: [],\n    inProgressTasks: [],\n    doneTasks: [],\n  });\n\n  useEffect(() => {\n    if (!tasksAll) return;\n    const currentTasks = tasksAll.find(task => task.date === currentDay)?.tasks;\n    if (!currentTasks) {\n      setTasksCurrentDay({\n        todoTasks: [],\n        inProgressTasks: [],\n        doneTasks: [],\n      });\n      return;\n    }\n    const todoTasks = currentTasks.filter(task => task.category === 'to-do');\n    const inProgressTasks = currentTasks.filter(\n      task => task.category === 'in-progress'\n    );\n    const doneTasks = currentTasks.filter(task => task.category === 'done');\n\n    setTasksCurrentDay({ todoTasks, inProgressTasks, doneTasks });\n  }, [tasksAll, currentDay]);\n\n  return (\n    <>\n      <CalendarHead mode=\"dayMode\" currentDay={currentDay} />\n      <TasksColumnsList tasks={tasksCurrentDay} currentDay={currentDay} />\n    </>\n  );\n};\n","import toast from 'react-hot-toast';\n\nexport const showSuccessLogIn = () => {\n  toast.success('You have logged in successfully');\n};\nexport const showError = () => {\n  toast.error('Oohps, something has gone wrong. Try again, please.');\n};\nexport const showSuccessAddTask = () => {\n  toast.success(\"You've just created new task\");\n};\nexport const showSuccessEditTask = () => {\n  toast.success(\"You've just  editted task\");\n};\nexport const showSuccessDoneTasks = () => {\n  toast.success('All done for today!');\n};\nexport const showErrorValidation = message => {\n  toast.error(message);\n};\n\nexport const showSuccessReg = () => {\n  toast.success(\n    'Thank you for registering! Your account has been created successfully.'\n  );\n};\n\nexport const showUnknwnErrReg = () => {\n  toast.error(\n    'Registration failed due to an unexpected error. Please try again later.'\n  );\n};\nexport const showExistAcctErrorReg = () => {\n  toast.error(\n    'Registration failed. Probably this email is already associated with an existing account. Please try again.'\n  );\n};\n\nexport const showSuccessMoveTask = columnName => {\n  toast.success(\n    `Task has been successfully moved to the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessDeleteTask = columnName => {\n  toast.success(\n    `Task has been successfully deleted from the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessUserUpdate = () => {\n  toast.success('Your account has been updated successfully.');\n};\n\nexport const showErrorUserUpdate = () => {\n  toast.error(\n    'Update failed due to an unexpected error. Please try again later.'\n  );\n};\n\nexport const showAnyError = errorText => {\n  toast.error(errorText);\n};\nexport const showEmptyTitle = () => {\n  toast.error('The title is required to have at least 3 letters');\n};\n"],"names":["ListStyled","styled","List","theme","WEEK_DAYS","mode","currentDay","useState","isNarrowScreen","setIsNarrowScreen","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","options","selectedDate","Date","day","getDay","startWeekDate","setDate","getDate","className","map","index","ListItem","currentDate","indexOf","Box","sx","display","flexDirection","alignItems","justifyContent","gap","xs","md","to","getFullYear","getMonth","Button","openTaskModal","checkCurrentDate","onClick","href","sprite","ColumnHeadBarWrapper","title","BoxWrapper","Title","InfoBar","UserBar","Priority","TaskToolbarList","MenuList","Menu","MenuItemColumn","MenuItem","CategoryTitle","initialState","isOpen","action","details","modalState","setModalState","openModal","closeModal","toggleModal","prevState","checkDarkTheme","localStorage","getItem","Modal","children","props","onClose","width","setWidth","darkTheme","setDarkTheme","closeButtonStyles","position","padding","top","right","backgroundColor","stroke","svg","modalContentStyles","background","border","customStyles","overlay","content","left","bottom","marginRight","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","boxShadow","transform","contentLabel","closeTimeoutMS","shouldCloseOnOverlayClick","onRequestClose","style","IconButton","height","xlinkHref","commonInputStyles","commonButtonStyles","commonOperationBtnStyles","commonWarningStyles","StyledForm","InfoInput","Block","InfoWrapper","Info","Label","TimePicker","TimeField","ButtonList","CancelButton","AddButton","EditButton","WarningTime","WarningTitle","label","value","onChange","localeText","ukUA","timePickerStyles","color","borderColor","LocalizationProvider","dateAdapter","AdapterDayjs","format","name","str","charAt","toUpperCase","slice","TASKS_PRIORITY","LOW","MEDIUM","HIGH","COLUMN_TASKS","categories","radioStyles","low","iconColor","medium","high","RadioIcon","PriorityList","defaultValue","handleChange","priority","setPriority","FormControl","component","FormLabel","RadioGroup","row","event","target","columnGap","FormControlLabel","control","Radio","icon","checkedIcon","capitalizeString","marginLeft","fontWeight","fontSize","lineHeight","dayjs","utc","timeString","dateString","split","dateOnly","replace","Yup","shape","max","required","start","matches","message","end","test","this","parent","startTime","parseInt","oneOf","date","typeError","category","validateForm","task","taskValidationSchema","abortEarly","validationErrors","errors","join","showErrorValidation","taskDetails","setTitle","dispatch","useDispatch","getTimeStringWithDate","getDefaultStartTime","setStart","hour","minute","getDefaultEndTime","setEnd","createTaskObject","handleSubmit","e","preventDefault","trimmedTitle","trim","showAnyError","length","showEmptyTitle","createTask","updateTask","taskId","id","taskData","error","showError","isTimeWarning","useMemo","isBefore","labelStyles","inputStyles","onSubmit","fontFamily","htmlFor","type","placeholder","newValue","_id","useModal","anchorEl","setAnchorEl","open","Boolean","editedTaskDetails","availableCategories","filter","item","isMobile","undefined","currentTarget","minWidth","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","newCategory","updatingTask","handleMoveTask","deleteTask","userImgUrl","useSelector","selectUser","src","alt","clsx","TasksWrapper","tasks","lowTasks","mediumTasks","highTasks","filteredTasks","ContainerTask","GridItem","Grid","PaperTask","Paper","handleAddTaskClick","toISOString","marginBottom","margin","overflowY","GridContainer","allTask","tasksList","Object","keys","taskKey","values","tasks2","forEach","element","push","tasksByCategory","reduce","acc","container","flexWrap","spacing","overflowX","column","ChosenDay","useParams","tasksAll","selectAllTasks","todoTasks","inProgressTasks","doneTasks","tasksCurrentDay","setTasksCurrentDay","currentTasks","find","CalendarHead","showSuccessLogIn","toast","showSuccessReg","showUnknwnErrReg","showExistAcctErrorReg","showSuccessUserUpdate","showErrorUserUpdate","errorText"],"sourceRoot":""}