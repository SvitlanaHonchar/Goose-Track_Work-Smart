{"version":3,"file":"static/js/466.d0750bb0.chunk.js","mappings":"sTAIaA,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,8nEAsHfE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,yhBA0BZI,GAAsBJ,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,qI,oEChI1BK,GAAmBC,EAAAA,EAAAA,IAAO,CAC9BC,OAAOC,EAAAA,EAAAA,MAASC,SAAS,qBAAqBF,MAAM,iBACpDG,UAAUF,EAAAA,EAAAA,MACPC,SAAS,wBACTE,IAAI,EAAG,uCACPC,QAAQ,QAAS,kCAGTC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAAS,YAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,WAKrBD,EAJqB,aAAjBD,EAIY,WAHE,OAInB,EAED,OACE,SAAC,KAAD,CACEG,cAAe,CACbf,MAAO,GACPG,SAAU,IAEZL,iBAAkBA,EAClBkB,SAAQ,mCAAE,WAAOC,EAAP,mFAAiBC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAhC,kBAEqBZ,GACzBa,EAAAA,EAAAA,IAAU,CACRpB,MAAOiB,EAAOjB,MACdG,SAAUc,EAAOd,YALf,OASoB,yBATpB,OASWkB,OACfC,EAAAA,EAAAA,MACAb,EAAS,mBACTS,GAAc,GACdC,MAEAI,EAAAA,EAAAA,MAfI,gDAkBNC,QAAQC,IAAR,MAlBM,yDAAF,wDANV,SA4BG,gBAAGR,EAAH,EAAGA,OAAQS,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,QAAjC,OACC,UAACpC,EAAD,YACE,cAAGqC,UAAU,QAAb,sBACA,mBAAOA,UAAU,aAAjB,mBAEE,SAAC,KAAD,CACEA,UACEF,EAAO3B,OAAS4B,EAAQ5B,MACpB,0BACA,wBAENqB,KAAK,QACLS,KAAK,QACLC,MAAOd,EAAOjB,MACdgC,YAAY,mBACZ9B,UAAQ,KAEV,SAAC,KAAD,CACE4B,KAAK,QACLG,UAAU,MACVJ,UAAU,qBAGd,mBAAOA,UAAU,cAAjB,WACE,wCACA,iBAAKA,UAAU,iBAAf,WACE,SAAC,KAAD,CACEA,UACEF,EAAOxB,UAAYyB,EAAQzB,SACvB,6CACA,2CAEN2B,KAAK,WACLC,MAAOd,EAAOd,SACd6B,YAAY,uCACZX,KAAMT,EACNV,UAAQ,KAEV,SAACL,EAAD,CAAqBwB,KAAK,SAASa,QAASpB,EAA5C,SACoB,aAAjBF,GACC,SAACuB,EAAA,EAAD,CAAYC,GAAI,CAAEC,MAAOC,EAAAA,GAAAA,QAAAA,QAAAA,SAEzB,SAACC,EAAA,EAAD,CAAeH,GAAI,CAAEC,MAAOC,EAAAA,GAAAA,QAAAA,QAAAA,cAIlC,SAAC,KAAD,CACET,UAAU,eACVC,KAAK,WACLG,UAAU,YAId,UAACtC,EAAD,CACE0B,KAAK,SACLmB,SAAUd,EACVe,QAAQ,YAHV,oBAME,gBAAKC,OAAO,KAAKC,MAAM,KAAvB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,2BA5D3B,GAmEN,E,mKClIYC,GAA2BrD,EAAAA,EAAAA,IAAOsD,EAAAA,EAAPtD,CAAH,imDAsCTuD,EAQEC,E,q6eC/CjBC,EAAqB,WAChC,OACE,SAACJ,EAAD,CACEV,GAAI,CAAEe,gBAAiBb,EAAAA,GAAAA,QAAAA,UAAAA,MADzB,UAGE,iBAAKT,UAAU,mBAAf,WACE,SAACvB,EAAD,KACA,SAAC8C,EAAA,EAAD,CAAcC,KAAK,YAAYC,KAAK,aACpC,iBAAKzB,UAAU,iBAAf,WACE,gBAAKA,UAAU,sBACf,gBAAKA,UAAU,qBAAf,UACE,kBAAMA,UAAU,UAAhB,sBACU,iBAAMA,UAAU,eAAhB,qBADV,sDASX,ECfD,EARkB,WAChB,OACE,0BACE,SAACqB,EAAD,KAGL,C,kGCPYK,GAAqB9D,EAAAA,EAAAA,IAAO+D,EAAAA,GAAP/D,CAAH,uX,SCe/B,EAbqB,SAAC,GAAoB,IAAlB4D,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,OACE,0BACE,SAACC,EAAD,CAAoBE,GAAIJ,EAAxB,SAA+BC,KAGpC,C,6RCTYhC,EAAmB,WAC9BoC,EAAAA,GAAAA,QAAc,kCACf,EACYnC,EAAY,WACvBmC,EAAAA,GAAAA,MAAY,sDACb,EAUYC,EAAsB,SAAAC,GACjCF,EAAAA,GAAAA,MAAYE,EACb,EAEYC,EAAiB,WAC5BH,EAAAA,GAAAA,QACE,yEAEH,EAEYI,EAAmB,WAC9BJ,EAAAA,GAAAA,MACE,0EAEH,EACYK,EAAwB,WACnCL,EAAAA,GAAAA,MACE,6GAEH,EAcYM,EAAwB,WACnCN,EAAAA,GAAAA,QAAc,8CACf,EAEYO,EAAsB,WACjCP,EAAAA,GAAAA,MACE,oEAEH,EAEYQ,EAAe,SAAAC,GAC1BT,EAAAA,GAAAA,MAAYS,EACb,EACYC,EAAiB,WAC5BV,EAAAA,GAAAA,MAAY,mDACb,C,8CC/DD,KAAeW,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,sNACD,a,8CCFJ,KAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,8fACD,gB","sources":["modules/LoginPageComponent/components/LoginForm/LoginForm.styled.js","modules/LoginPageComponent/components/LoginForm/LoginForm.jsx","modules/LoginPageComponent/components/LoginPageComp/LoginPageComponent.styled.js","modules/LoginPageComponent/components/LoginPageComp/LoginPageComponent.jsx","pages/LoginPage/LoginPage.jsx","shared/components/AuthNavigate/AuthNavigate.styled.js","shared/components/AuthNavigate/AuthNavigate.jsx","shared/utils/notifications.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\nimport { Form } from 'formik';\n\nexport const StyledLoginForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 18px;\n  padding: 40px 24px;\n  background-color: #ffffff;\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    padding: 40px;\n  }\n\n  .Title {\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 1.33;\n    color: #3e85f3;\n    text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n      0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 40px;\n      font-size: 24px;\n      line-height: 1;\n    }\n  }\n\n  .Inputlabel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 1.25;\n    color: #111111;\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.21;\n    }\n\n    &:not(:last-child) {\n      margin-bottom: 24px;\n\n      @media screen and (min-width: 768px) {\n        margin-bottom: 18px;\n      }\n\n      &.custom-border {\n        border: 2px solid red;\n      }\n    }\n\n    &:nth-of-type(2) {\n      margin-bottom: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-bottom: 48px;\n      }\n    }\n\n    & .ErrorMessage {\n      color: #ea3d65;\n    }\n  }\n\n  .InputField {\n    padding: 14px;\n    border-radius: 8px;\n    width: 100%;\n\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.29px;\n    color: #111111;\n\n    @media screen and (min-width: 768px) {\n      padding: 18px;\n      font-size: 16px;\n      line-height: 1.12;\n    }\n\n    &::placeholder {\n      font-weight: 400;\n      font-size: 14px;\n      line-height: 1.29;\n      color: #dce3e5;\n\n      @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.12;\n      }\n    }\n  }\n\n  .ValidInput {\n    border: 1px solid rgba(220, 227, 229, 0.6);\n  }\n\n  .InvalidInput {\n    border: 1px solid #ea3d65;\n  }\n\n  .InputFieldPassword::placeholder {\n    letter-spacing: 8px;\n  }\n\n  .PasswordInput {\n    position: relative;\n    width: 100%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n  border-radius: 16px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.29;\n  letter-spacing: -0.02em;\n  color: #ffffff;\n  stroke: #ffffff;\n  text-transform: none;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 16px;\n    padding-bottom: 16px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n\nexport const StyledVisibilityBtn = styled(Button)`\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\n\nimport {\n  StyledLoginForm,\n  StyledButton,\n  StyledVisibilityBtn,\n} from './LoginForm.styled.js';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport { authLogin } from 'redux/auth/authOperations.js';\nimport {\n  showSuccessLogIn,\n  showError,\n} from '../../../../shared/utils/notifications';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport theme from 'shared/theme';\n\nconst validationSchema = object({\n  email: string().required('Email is required').email('Invalid email'),\n  password: string()\n    .required('Password is required')\n    .min(6, 'Password should be 6 chars minimum.')\n    .matches(/^\\S*$/, 'Name must not contain spaces'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [passwordType, setPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        try {\n          const actionResult = await dispatch(\n            authLogin({\n              email: values.email,\n              password: values.password,\n            })\n          );\n\n          if (actionResult.type === 'user/login/fulfilled') {\n            showSuccessLogIn();\n            navigate('/calendar/month');\n            setSubmitting(false);\n            resetForm();\n          } else {\n            showError();\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }}\n    >\n      {({ values, isSubmitting, errors, touched }) => (\n        <StyledLoginForm>\n          <p className=\"Title\"> Log in</p>\n          <label className=\"Inputlabel\">\n            Email\n            <Field\n              className={\n                errors.email && touched.email\n                  ? 'InvalidInput InputField'\n                  : 'ValidInput InputField'\n              }\n              type=\"email\"\n              name=\"email\"\n              value={values.email}\n              placeholder=\"nadiia@gmail.com\"\n              required\n            />\n            <ErrorMessage\n              name=\"email\"\n              component=\"div\"\n              className=\"ErrorMessage\"\n            />\n          </label>\n          <label className=\"Inputlabel \">\n            <span>Password</span>\n            <div className=\"PasswordInput \">\n              <Field\n                className={\n                  errors.password && touched.password\n                    ? 'InvalidInput InputField InputFieldPassword'\n                    : 'ValidInput InputField InputFieldPassword'\n                }\n                name=\"password\"\n                value={values.password}\n                placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\"\n                type={passwordType}\n                required\n              />\n              <StyledVisibilityBtn type=\"button\" onClick={togglePassword}>\n                {passwordType === 'password' ? (\n                  <Visibility sx={{ color: theme.palette.primary.main }} />\n                ) : (\n                  <VisibilityOff sx={{ color: theme.palette.primary.main }} />\n                )}\n              </StyledVisibilityBtn>\n            </div>\n            <ErrorMessage\n              className=\"ErrorMessage\"\n              name=\"password\"\n              component=\"div\"\n            />\n          </label>\n\n          <StyledButton\n            type=\"submit\"\n            disabled={isSubmitting}\n            variant=\"contained\"\n          >\n            Submit\n            <svg height=\"18\" width=\"18\">\n              <use href={sprite + '#loginStartPage'}></use>\n            </svg>\n          </StyledButton>\n        </StyledLoginForm>\n      )}\n    </Formik>\n  );\n};\n","import { Box } from '@mui/material';\nimport styled from 'styled-components';\n\nimport img1 from '../../../../shared/images/logInPage/desktop_goose_loginPage.png';\nimport img2 from '../../../../shared/images/logInPage/desktop_goose_loginPage@2x.png';\nimport img3 from '../../../../shared/images/logInPage/desktop_goose_message_logIn.png';\nimport img4 from '../../../../shared/images/logInPage/desktop_goose_message_logIn@2x.png';\n\nexport const StyledLoginPageComponent = styled(Box)`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  .ContentContainer {\n    position: relative;\n\n    @media screen and (max-width: 374px) {\n      width: 100%;\n      max-width: 335px;\n    }\n\n    @media screen and (min-width: 375px) {\n      width: 335px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 480px;\n    }\n  }\n\n  .ImageContainer {\n    position: absolute;\n    top: 250px;\n    right: -250px;\n\n    @media screen and (max-width: 1439px) {\n      display: none;\n    }\n  }\n\n  .StyledImageGoose {\n    position: absolute;\n    top: -80px;\n    right: -40px;\n    background-image: url(${img1});\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 178px;\n    height: 414px;\n\n    @media screen and (min-device-pixel-ratio: 2) {\n      background-image: url(${img2});\n    }\n  }\n\n  .StyledImageMessege {\n    position: absolute;\n    top: -170px;\n    right: -50px;\n    background-image: url(${img3});\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 177px;\n    height: 125px;\n\n    @media screen and (min-device-pixel-ratio: 2) {\n      background-image: url(${img4});\n    }\n  }\n\n  .Messege {\n    position: absolute;\n    top: 23%;\n    right: 11%;\n    transform: rotate(15deg);\n    display: block;\n    width: 138px;\n    height: 48px;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.14;\n    color: #111111;\n  }\n\n  .MessegeFocus {\n    color: #3e85f3;\n  }\n`;\n","import React from 'react';\nimport { LoginForm } from '../LoginForm/LoginForm';\nimport { StyledLoginPageComponent } from './LoginPageComponent.styled';\nimport AuthNavigate from 'shared/components/AuthNavigate/AuthNavigate';\n\nimport theme from 'shared/theme';\n\nexport const LoginPageComponent = () => {\n  return (\n    <StyledLoginPageComponent\n      sx={{ backgroundColor: theme.palette.secondary.main }}\n    >\n      <div className=\"ContentContainer\">\n        <LoginForm />\n        <AuthNavigate link=\"/register\" text=\"Sign up\" />\n        <div className=\"ImageContainer\">\n          <div className=\"StyledImageGoose\"></div>\n          <div className=\"StyledImageMessege\">\n            <span className=\"Messege\">\n              Quickly <span className=\"MessegeFocus\">come in</span> and write\n              down your tasks for the day!\n            </span>\n          </div>\n        </div>\n      </div>\n    </StyledLoginPageComponent>\n  );\n};\n","import React from 'react';\n\nimport { LoginPageComponent } from 'modules/LoginPageComponent';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginPageComponent />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledAuthNavigate = styled(NavLink)`\n  display: block;\n  text-align: center;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  text-decoration: underline;\n  color: #3e85f3;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledAuthNavigate } from './AuthNavigate.styled';\n\nconst AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <StyledAuthNavigate to={link}>{text}</StyledAuthNavigate>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default AuthNavigate;\n","import toast from 'react-hot-toast';\n\nexport const showSuccessLogIn = () => {\n  toast.success('You have logged in successfully');\n};\nexport const showError = () => {\n  toast.error('Oohps, something has gone wrong. Try again, please.');\n};\nexport const showSuccessAddTask = () => {\n  toast.success(\"You've just created new task\");\n};\nexport const showSuccessEditTask = () => {\n  toast.success(\"You've just  editted task\");\n};\nexport const showSuccessDoneTasks = () => {\n  toast.success('All done for today!');\n};\nexport const showErrorValidation = message => {\n  toast.error(message);\n};\n\nexport const showSuccessReg = () => {\n  toast.success(\n    'Thank you for registering! Your account has been created successfully.'\n  );\n};\n\nexport const showUnknwnErrReg = () => {\n  toast.error(\n    'Registration failed due to an unexpected error. Please try again later.'\n  );\n};\nexport const showExistAcctErrorReg = () => {\n  toast.error(\n    'Registration failed. Probably this email is already associated with an existing account. Please try again.'\n  );\n};\n\nexport const showSuccessMoveTask = columnName => {\n  toast.success(\n    `Task has been successfully moved to the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessDeleteTask = columnName => {\n  toast.success(\n    `Task has been successfully deleted from the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessUserUpdate = () => {\n  toast.success('Your account has been updated successfully.');\n};\n\nexport const showErrorUserUpdate = () => {\n  toast.error(\n    'Update failed due to an unexpected error. Please try again later.'\n  );\n};\n\nexport const showAnyError = errorText => {\n  toast.error(errorText);\n};\nexport const showEmptyTitle = () => {\n  toast.error('The title is required to have at least 3 letters');\n};\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["StyledLoginForm","styled","Form","StyledButton","Button","StyledVisibilityBtn","validationSchema","object","email","string","required","password","min","matches","LoginForm","dispatch","useDispatch","navigate","useNavigate","useState","passwordType","setPasswordType","togglePassword","initialValues","onSubmit","values","setSubmitting","resetForm","authLogin","type","showSuccessLogIn","showError","console","log","isSubmitting","errors","touched","className","name","value","placeholder","component","onClick","Visibility","sx","color","theme","VisibilityOff","disabled","variant","height","width","href","sprite","StyledLoginPageComponent","Box","img1","img2","LoginPageComponent","backgroundColor","AuthNavigate","link","text","StyledAuthNavigate","NavLink","to","toast","showErrorValidation","message","showSuccessReg","showUnknwnErrReg","showExistAcctErrorReg","showSuccessUserUpdate","showErrorUserUpdate","showAnyError","errorText","showEmptyTitle","createSvgIcon","_jsx","d"],"sourceRoot":""}