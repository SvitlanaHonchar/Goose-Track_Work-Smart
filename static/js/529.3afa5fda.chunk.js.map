{"version":3,"file":"static/js/529.3afa5fda.chunk.js","mappings":"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","sources":["modules/RegisterPageComponent/components/RegisterForm/RegisterForm.styled.js","modules/RegisterPageComponent/components/RegisterForm/RegisterForm.jsx","modules/RegisterPageComponent/components/RegisterPageComponent/RegisterPageComponent.styled.js","modules/RegisterPageComponent/components/RegisterPageComponent/RegisterPageComponent.jsx","pages/RegisterPage/RegisterPage.jsx","shared/components/AuthNavigate/AuthNavigate.styled.js","shared/components/AuthNavigate/AuthNavigate.jsx","shared/utils/notifications.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport theme from '../../../../shared/theme';\n\nexport const Container = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 20px;\n  padding-left: 20px;\n`;\n\nexport const RegisterFormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 40px 24px;\n\n  .ValidInput {\n    border: 1px solid rgba(220, 227, 229, 0.6);\n  }\n\n  .InvalidInput {\n    border: 1px solid #ea3d65;\n  }\n`;\n\nexport const SignUpText = styled.p`\n  margin-top: 0;\n  margin-bottom: 32px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.33;\n  color: ${theme.palette.primary.main};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.25;\n  color: ${theme.palette.grey.body};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.21;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n\n  &:nth-of-type(3) {\n    margin-bottom: 32px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 48px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${theme.palette.error.main};\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 14px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.29px;\n  color: ${theme.palette.grey.body};\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n\n  &::placeholder {\n    font-size: 14px;\n    line-height: 1.29;\n    color: ${theme.palette.grey.light};\n\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n      line-height: 1.12;\n    }\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n`;\n\nexport const StyledVisibilityBtn = styled(Button)`\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n`;\n\nexport const StyledButton = styled(Button)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n  border-radius: 16px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.28px;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    padding-top: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: #ffffff;\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  RegisterFormEl,\n  Container,\n  SignUpText,\n  StyledButton,\n  Label,\n  StyledField,\n  StyledErrorMessage,\n  Svg,\n  PasswordInput,\n  StyledVisibilityBtn,\n} from './RegisterForm.styled';\nimport { authRegister } from '../../../../redux/auth/authOperations';\nimport sprite from '../../../../shared/icons/sprite.svg';\nimport {\n  showExistAcctErrorReg,\n  showSuccessReg,\n  showUnknwnErrReg,\n} from 'shared/utils/notifications';\nimport theme from '../../../../shared/theme';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(/^\\S[\\S\\s]{0,48}\\S$/, 'Name must be at least 2 characters long')\n    .test(\n      'name-validation',\n      'Name must be at least 2 characters long',\n      value => {\n        return value && value.replace(/\\s/g, '').length >= 2;\n      }\n    ),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [passwordType, setPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          try {\n            const resultAction = await dispatch(authRegister(values));\n            if (resultAction.type === 'user/register/fulfilled') {\n              navigate('/calendar/month');\n              showSuccessReg();\n            } else {\n              showExistAcctErrorReg();\n            }\n          } catch (error) {\n            // if (error.response && error.response.status === 409) {\n            //   alert('This user is already registered.');\n            // } else {\n            showUnknwnErrReg();\n            // }\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, values, errors, touched }) => (\n          <RegisterFormEl>\n            <SignUpText>Sign Up</SignUpText>\n            <Label>\n              Name\n              <StyledField\n                className={\n                  errors.name && touched.name ? 'InvalidInput' : 'ValidInput'\n                }\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                value={values.name}\n              />\n              <StyledErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              Email\n              <StyledField\n                className={\n                  errors.email && touched.email ? 'InvalidInput' : 'ValidInput'\n                }\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                value={values.email}\n              />\n              <StyledErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label>\n              Password\n              <PasswordInput>\n                <StyledField\n                  className={\n                    errors.password && touched.password\n                      ? 'InvalidInput'\n                      : 'ValidInput'\n                  }\n                  type={passwordType}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  value={values.password}\n                />\n\n                <StyledVisibilityBtn type=\"button\" onClick={togglePassword}>\n                  {passwordType === 'password' ? (\n                    <Visibility sx={{ color: theme.palette.primary.main }} />\n                  ) : (\n                    <VisibilityOff sx={{ color: theme.palette.primary.main }} />\n                  )}\n                </StyledVisibilityBtn>\n              </PasswordInput>\n              <StyledErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <StyledButton\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Submitting' : 'Sign Up'}\n              <Svg height=\"18\" width=\"18\">\n                <use href={sprite + '#loginStartPage'}></use>\n              </Svg>\n            </StyledButton>\n          </RegisterFormEl>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\nimport goose from '../../../../shared/images/signUpPage/desktop_goose_signupPage.png';\nimport goose2 from '../../../../shared/images/signUpPage/desktop_goose_signupPage@2x.png';\n\nimport message from '../../../../shared/images/signUpPage/desktop_goose_message_signUp.png';\nimport message2 from '../../../../shared/images/signUpPage/desktop_goose_message_signUp@2x.png';\n\nexport const RegisterFormWrapper = styled.div`\n  margin-bottom: 18px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n  background-color: #dcebf7;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: absolute;\n  background-image: url(${goose});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  width: 352.8px;\n  height: 329.53px;\n  left: 49px;\n  bottom: 0;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose2});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -64px;\n    left: 20px;\n    width: 174px;\n    height: 138px;\n    background-image: url(${message});\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n\n    @media screen and (min-device-pixel-ratio: 2) {\n      background-image: url(${message2});\n    }\n  }\n`;\n\nexport const Text = styled.span`\n  position: absolute;\n  width: 140px;\n  height: 48px;\n  left: 35px;\n  top: -22px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.14;\n  color: #111111;\n  transform: rotate(-27deg);\n`;\n\nexport const TectAccent = styled.span`\n  color: #3e85f3;\n  font-style: italic;\n`;\n","import React from 'react';\nimport RegisterForm from '../RegisterForm/RegisterForm';\nimport {\n  Container,\n  ImgWrapper,\n  Text,\n  RegisterFormWrapper,\n  TectAccent,\n} from './RegisterPageComponent.styled';\nimport AuthNavigate from '../../../../shared/components/AuthNavigate/AuthNavigate';\n\nexport const RegisterPageComponent = () => {\n  return (\n    <>\n      <Container>\n        <RegisterFormWrapper>\n          <RegisterForm />\n        </RegisterFormWrapper>\n        <AuthNavigate link=\"/login\" text=\"Log in\" />\n        <ImgWrapper>\n          <Text>\n            Quickly <TectAccent>register</TectAccent> and familiarize yourself\n            with the application!\n          </Text>\n        </ImgWrapper>\n      </Container>\n    </>\n  );\n};\n","import { RegisterPageComponent } from 'modules/RegisterPageComponent';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return <RegisterPageComponent />;\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledAuthNavigate = styled(NavLink)`\n  display: block;\n  text-align: center;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  text-decoration: underline;\n  color: #3e85f3;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledAuthNavigate } from './AuthNavigate.styled';\n\nconst AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <StyledAuthNavigate to={link}>{text}</StyledAuthNavigate>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default AuthNavigate;\n","import toast from 'react-hot-toast';\n\nexport const showSuccessLogIn = () => {\n  toast.success('You have logged in successfully');\n};\nexport const showError = () => {\n  toast.error('Oohps, something has gone wrong. Try again, please.');\n};\nexport const showSuccessAddTask = () => {\n  toast.success(\"You've just created new task\");\n};\nexport const showSuccessEditTask = () => {\n  toast.success(\"You've just  editted task\");\n};\nexport const showSuccessDoneTasks = () => {\n  toast.success('All done for today!');\n};\nexport const showErrorValidation = message => {\n  toast.error(message);\n};\n\nexport const showSuccessReg = () => {\n  toast.success(\n    'Thank you for registering! Your account has been created successfully.'\n  );\n};\n\nexport const showUnknwnErrReg = () => {\n  toast.error(\n    'Registration failed due to an unexpected error. Please try again later.'\n  );\n};\nexport const showExistAcctErrorReg = () => {\n  toast.error(\n    'Registration failed. Probably this email is already associated with an existing account. Please try again.'\n  );\n};\n\nexport const showSuccessMoveTask = columnName => {\n  toast.success(\n    `Task has been successfully moved to the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessDeleteTask = columnName => {\n  toast.success(\n    `Task has been successfully deleted from the \"${columnName}\" column`\n  );\n};\n\nexport const showSuccessUserUpdate = () => {\n  toast.success('Your account has been updated successfully.');\n};\n\nexport const showErrorUserUpdate = () => {\n  toast.error(\n    'Update failed due to an unexpected error. Please try again later.'\n  );\n};\n\nexport const showAnyError = errorText => {\n  toast.error(errorText);\n};\nexport const showEmptyTitle = () => {\n  toast.error('The title is required to have at least 3 letters');\n};\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["Container","styled","RegisterFormEl","Form","SignUpText","theme","Label","StyledErrorMessage","ErrorMessage","StyledField","Field","PasswordInput","StyledVisibilityBtn","Button","StyledButton","Svg","validationSchema","Yup","shape","name","required","matches","test","value","replace","length","email","password","min","dispatch","useDispatch","navigate","useNavigate","useState","passwordType","setPasswordType","togglePassword","initialValues","onSubmit","values","setSubmitting","authRegister","type","showSuccessReg","showExistAcctErrorReg","showUnknwnErrReg","isSubmitting","errors","touched","className","placeholder","component","onClick","Visibility","sx","color","VisibilityOff","variant","disabled","height","width","href","sprite","RegisterFormWrapper","ImgWrapper","goose","goose2","message2","Text","TectAccent","RegisterPageComponent","AuthNavigate","link","text","StyledAuthNavigate","NavLink","to","showSuccessLogIn","toast","showError","showErrorValidation","message","showSuccessMoveTask","columnName","showSuccessDeleteTask","showSuccessUserUpdate","showErrorUserUpdate","showAnyError","errorText","showEmptyTitle","createSvgIcon","_jsx","d"],"sourceRoot":""}